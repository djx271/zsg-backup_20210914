@(maxItem: Int)

package net.scalax.asuna.helper.template

import net.scalax.asuna.helper.MacroColumnInfo
import net.scalax.asuna.core.encoder.EncoderShape
import net.scalax.asuna.core.decoder.{ DecoderShape, SplitData }
import net.scalax.asuna.helper.decoder.macroImpl.PropertyType
import net.scalax.asuna.helper.SetterContent
import net.scalax.asuna.helper.CaseModelContent2222
import net.scalax.asuna.helper.data.macroImpl.DataGenWrap

import shapeless._

trait CaseClassHelper

object CaseClassHelper {
    @for(i <- 1 to maxItem) {
        @net.scalax.asuna.template.txt.CaseClassHelper(count = i)
    }
}

trait CaseClassDataHelper

object CaseClassDataHelper {
    @for(i <- 1 to maxItem) {
        @net.scalax.asuna.template.txt.CaseClassDataHelper(count = i)
    }
}

@for(i <- 1 to maxItem) {
    @net.scalax.asuna.template.txt.CaseClassRepHelper(count = i)

    @net.scalax.asuna.template.txt.CaseClassRepDataHelper(count = i)

    object CaseClassHelper@{i} {

        @net.scalax.asuna.template.txt.CaseClassEncoderImplicit(count = i)
        @net.scalax.asuna.template.txt.CaseClassDecoderImplicit(count = i)

    }
}