@(maxItem: Int)

package net.scalax.asuna.helper.template

import net.scalax.asuna.helper.MacroColumnInfo
import net.scalax.asuna.core.encoder.EncoderShape
import net.scalax.asuna.core.decoder.{ DecoderShape, SplitData }
import net.scalax.asuna.helper.decoder.macroImpl.PropertyType
import net.scalax.asuna.helper.data.macroImpl.DataGenWrap
import net.scalax.asuna.helper.data.macroImpl.RepGroupColumnWrapper

import shapeless._

trait CaseClassMapper

object CaseClassMapper {
    @* @for(i <- 1 to maxItem) {
        @net.scalax.asuna.template.txt.CaseClassHelper(count = i)
    } *@
}

trait CaseClassDataMapperHelper

object CaseClassDataMapperHelper {
    @* @for(i <- 1 to maxItem) {
        @net.scalax.asuna.template.txt.CaseClassDataHelper(count = i)
    } *@
}

@for(i <- 1 to maxItem) {
    @* @net.scalax.asuna.template.txt.CaseClassRepHelper(count = i)

    @net.scalax.asuna.template.txt.CaseClassRepDataHelper(count = i)

    object CaseClassHelper@{i} {

        @net.scalax.asuna.template.txt.CaseClassEncoderImplicit(count = i)
        @net.scalax.asuna.template.txt.CaseClassDecoderImplicit(count = i)

    } *@
}