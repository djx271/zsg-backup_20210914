package org.scalax.asuna.ii.item
trait AppendEatXyyWithMessage {
  implicit def xyyWithMessage1[
    K <: org.scalax.asuna.mapper.item.KindContext,
    H1,
    M1 <: org.scalax.asuna.mapper.item.Message,
    T1 <: org.scalax.asuna.mapper.item.TypeParam
  ](
    implicit t1: org.scalax.asuna.mapper.item.Application[K, H1, T1]
  ): org.scalax.asuna.mapper.item.Application[K, org.scalax.asuna.ii.item.ItemTagWithMessage1[H1, M1], EatXyyType1[T1]] =
    new org.scalax.asuna.mapper.item.Application[K, org.scalax.asuna.ii.item.ItemTagWithMessage1[H1, M1], EatXyyType1[T1]] {
      override def application(context: org.scalax.asuna.mapper.item.Context[K]): K#M[EatXyyType1[T1]] = {
        AppendEatXyy.xyy1(t1).application(context)
      }
    }
  implicit def xyyWithMessage2[
    K <: org.scalax.asuna.mapper.item.KindContext,
    H1,
    M1 <: org.scalax.asuna.mapper.item.Message,
    H2,
    M2 <: org.scalax.asuna.mapper.item.Message,
    T1 <: org.scalax.asuna.mapper.item.TypeParam,
    T2 <: org.scalax.asuna.mapper.item.TypeParam
  ](
    implicit t1: org.scalax.asuna.mapper.item.Application[K, H1, T1],
    t2: org.scalax.asuna.mapper.item.Application[K, H2, T2]
  ): org.scalax.asuna.mapper.item.Application[K, org.scalax.asuna.ii.item.ItemTagWithMessage2[H1, M1, H2, M2], EatXyyType2[T1, T2]] =
    new org.scalax.asuna.mapper.item.Application[K, org.scalax.asuna.ii.item.ItemTagWithMessage2[H1, M1, H2, M2], EatXyyType2[T1, T2]] {
      override def application(context: org.scalax.asuna.mapper.item.Context[K]): K#M[EatXyyType2[T1, T2]] = {
        AppendEatXyy.xyy2(t1, t2).application(context)
      }
    }
  implicit def xyyWithMessage3[
    K <: org.scalax.asuna.mapper.item.KindContext,
    H1,
    M1 <: org.scalax.asuna.mapper.item.Message,
    H2,
    M2 <: org.scalax.asuna.mapper.item.Message,
    H3,
    M3 <: org.scalax.asuna.mapper.item.Message,
    T1 <: org.scalax.asuna.mapper.item.TypeParam,
    T2 <: org.scalax.asuna.mapper.item.TypeParam,
    T3 <: org.scalax.asuna.mapper.item.TypeParam
  ](
    implicit t1: org.scalax.asuna.mapper.item.Application[K, H1, T1],
    t2: org.scalax.asuna.mapper.item.Application[K, H2, T2],
    t3: org.scalax.asuna.mapper.item.Application[K, H3, T3]
  ): org.scalax.asuna.mapper.item.Application[K, org.scalax.asuna.ii.item.ItemTagWithMessage3[H1, M1, H2, M2, H3, M3], EatXyyType3[T1, T2, T3]] =
    new org.scalax.asuna.mapper.item.Application[K, org.scalax.asuna.ii.item.ItemTagWithMessage3[H1, M1, H2, M2, H3, M3], EatXyyType3[T1, T2, T3]] {
      override def application(context: org.scalax.asuna.mapper.item.Context[K]): K#M[EatXyyType3[T1, T2, T3]] = {
        AppendEatXyy.xyy3(t1, t2, t3).application(context)
      }
    }
  implicit def xyyWithMessage4[
    K <: org.scalax.asuna.mapper.item.KindContext,
    H1,
    M1 <: org.scalax.asuna.mapper.item.Message,
    H2,
    M2 <: org.scalax.asuna.mapper.item.Message,
    H3,
    M3 <: org.scalax.asuna.mapper.item.Message,
    H4,
    M4 <: org.scalax.asuna.mapper.item.Message,
    T1 <: org.scalax.asuna.mapper.item.TypeParam,
    T2 <: org.scalax.asuna.mapper.item.TypeParam,
    T3 <: org.scalax.asuna.mapper.item.TypeParam,
    T4 <: org.scalax.asuna.mapper.item.TypeParam
  ](
    implicit t1: org.scalax.asuna.mapper.item.Application[K, H1, T1],
    t2: org.scalax.asuna.mapper.item.Application[K, H2, T2],
    t3: org.scalax.asuna.mapper.item.Application[K, H3, T3],
    t4: org.scalax.asuna.mapper.item.Application[K, H4, T4]
  ): org.scalax.asuna.mapper.item.Application[K, org.scalax.asuna.ii.item.ItemTagWithMessage4[H1, M1, H2, M2, H3, M3, H4, M4], EatXyyType4[T1, T2, T3, T4]] =
    new org.scalax.asuna.mapper.item.Application[K, org.scalax.asuna.ii.item.ItemTagWithMessage4[H1, M1, H2, M2, H3, M3, H4, M4], EatXyyType4[T1, T2, T3, T4]] {
      override def application(context: org.scalax.asuna.mapper.item.Context[K]): K#M[EatXyyType4[T1, T2, T3, T4]] = {
        AppendEatXyy.xyy4(t1, t2, t3, t4).application(context)
      }
    }
  implicit def xyyWithMessage5[
    K <: org.scalax.asuna.mapper.item.KindContext,
    H1,
    M1 <: org.scalax.asuna.mapper.item.Message,
    H2,
    M2 <: org.scalax.asuna.mapper.item.Message,
    H3,
    M3 <: org.scalax.asuna.mapper.item.Message,
    H4,
    M4 <: org.scalax.asuna.mapper.item.Message,
    H5,
    M5 <: org.scalax.asuna.mapper.item.Message,
    T1 <: org.scalax.asuna.mapper.item.TypeParam,
    T2 <: org.scalax.asuna.mapper.item.TypeParam,
    T3 <: org.scalax.asuna.mapper.item.TypeParam,
    T4 <: org.scalax.asuna.mapper.item.TypeParam,
    T5 <: org.scalax.asuna.mapper.item.TypeParam
  ](
    implicit t1: org.scalax.asuna.mapper.item.Application[K, H1, T1],
    t2: org.scalax.asuna.mapper.item.Application[K, H2, T2],
    t3: org.scalax.asuna.mapper.item.Application[K, H3, T3],
    t4: org.scalax.asuna.mapper.item.Application[K, H4, T4],
    t5: org.scalax.asuna.mapper.item.Application[K, H5, T5]
  ): org.scalax.asuna.mapper.item.Application[K, org.scalax.asuna.ii.item.ItemTagWithMessage5[H1, M1, H2, M2, H3, M3, H4, M4, H5, M5], EatXyyType5[T1, T2, T3, T4, T5]] =
    new org.scalax.asuna.mapper.item.Application[K, org.scalax.asuna.ii.item.ItemTagWithMessage5[H1, M1, H2, M2, H3, M3, H4, M4, H5, M5], EatXyyType5[T1, T2, T3, T4, T5]] {
      override def application(context: org.scalax.asuna.mapper.item.Context[K]): K#M[EatXyyType5[T1, T2, T3, T4, T5]] = {
        AppendEatXyy.xyy5(t1, t2, t3, t4, t5).application(context)
      }
    }
  implicit def xyyWithMessage6[
    K <: org.scalax.asuna.mapper.item.KindContext,
    H1,
    M1 <: org.scalax.asuna.mapper.item.Message,
    H2,
    M2 <: org.scalax.asuna.mapper.item.Message,
    H3,
    M3 <: org.scalax.asuna.mapper.item.Message,
    H4,
    M4 <: org.scalax.asuna.mapper.item.Message,
    H5,
    M5 <: org.scalax.asuna.mapper.item.Message,
    H6,
    M6 <: org.scalax.asuna.mapper.item.Message,
    T1 <: org.scalax.asuna.mapper.item.TypeParam,
    T2 <: org.scalax.asuna.mapper.item.TypeParam,
    T3 <: org.scalax.asuna.mapper.item.TypeParam,
    T4 <: org.scalax.asuna.mapper.item.TypeParam,
    T5 <: org.scalax.asuna.mapper.item.TypeParam,
    T6 <: org.scalax.asuna.mapper.item.TypeParam
  ](
    implicit t1: org.scalax.asuna.mapper.item.Application[K, H1, T1],
    t2: org.scalax.asuna.mapper.item.Application[K, H2, T2],
    t3: org.scalax.asuna.mapper.item.Application[K, H3, T3],
    t4: org.scalax.asuna.mapper.item.Application[K, H4, T4],
    t5: org.scalax.asuna.mapper.item.Application[K, H5, T5],
    t6: org.scalax.asuna.mapper.item.Application[K, H6, T6]
  ): org.scalax.asuna.mapper.item.Application[K, org.scalax.asuna.ii.item.ItemTagWithMessage6[H1, M1, H2, M2, H3, M3, H4, M4, H5, M5, H6, M6], EatXyyType6[
    T1,
    T2,
    T3,
    T4,
    T5,
    T6
  ]] =
    new org.scalax.asuna.mapper.item.Application[K, org.scalax.asuna.ii.item.ItemTagWithMessage6[H1, M1, H2, M2, H3, M3, H4, M4, H5, M5, H6, M6], EatXyyType6[
      T1,
      T2,
      T3,
      T4,
      T5,
      T6
    ]] {
      override def application(context: org.scalax.asuna.mapper.item.Context[K]): K#M[EatXyyType6[T1, T2, T3, T4, T5, T6]] = {
        AppendEatXyy.xyy6(t1, t2, t3, t4, t5, t6).application(context)
      }
    }
  implicit def xyyWithMessage7[
    K <: org.scalax.asuna.mapper.item.KindContext,
    H1,
    M1 <: org.scalax.asuna.mapper.item.Message,
    H2,
    M2 <: org.scalax.asuna.mapper.item.Message,
    H3,
    M3 <: org.scalax.asuna.mapper.item.Message,
    H4,
    M4 <: org.scalax.asuna.mapper.item.Message,
    H5,
    M5 <: org.scalax.asuna.mapper.item.Message,
    H6,
    M6 <: org.scalax.asuna.mapper.item.Message,
    H7,
    M7 <: org.scalax.asuna.mapper.item.Message,
    T1 <: org.scalax.asuna.mapper.item.TypeParam,
    T2 <: org.scalax.asuna.mapper.item.TypeParam,
    T3 <: org.scalax.asuna.mapper.item.TypeParam,
    T4 <: org.scalax.asuna.mapper.item.TypeParam,
    T5 <: org.scalax.asuna.mapper.item.TypeParam,
    T6 <: org.scalax.asuna.mapper.item.TypeParam,
    T7 <: org.scalax.asuna.mapper.item.TypeParam
  ](
    implicit t1: org.scalax.asuna.mapper.item.Application[K, H1, T1],
    t2: org.scalax.asuna.mapper.item.Application[K, H2, T2],
    t3: org.scalax.asuna.mapper.item.Application[K, H3, T3],
    t4: org.scalax.asuna.mapper.item.Application[K, H4, T4],
    t5: org.scalax.asuna.mapper.item.Application[K, H5, T5],
    t6: org.scalax.asuna.mapper.item.Application[K, H6, T6],
    t7: org.scalax.asuna.mapper.item.Application[K, H7, T7]
  ): org.scalax.asuna.mapper.item.Application[K, org.scalax.asuna.ii.item.ItemTagWithMessage7[H1, M1, H2, M2, H3, M3, H4, M4, H5, M5, H6, M6, H7, M7], EatXyyType7[
    T1,
    T2,
    T3,
    T4,
    T5,
    T6,
    T7
  ]] =
    new org.scalax.asuna.mapper.item.Application[K, org.scalax.asuna.ii.item.ItemTagWithMessage7[H1, M1, H2, M2, H3, M3, H4, M4, H5, M5, H6, M6, H7, M7], EatXyyType7[
      T1,
      T2,
      T3,
      T4,
      T5,
      T6,
      T7
    ]] {
      override def application(context: org.scalax.asuna.mapper.item.Context[K]): K#M[EatXyyType7[T1, T2, T3, T4, T5, T6, T7]] = {
        AppendEatXyy.xyy7(t1, t2, t3, t4, t5, t6, t7).application(context)
      }
    }
  implicit def xyyWithMessage8[
    K <: org.scalax.asuna.mapper.item.KindContext,
    H1,
    M1 <: org.scalax.asuna.mapper.item.Message,
    H2,
    M2 <: org.scalax.asuna.mapper.item.Message,
    H3,
    M3 <: org.scalax.asuna.mapper.item.Message,
    H4,
    M4 <: org.scalax.asuna.mapper.item.Message,
    H5,
    M5 <: org.scalax.asuna.mapper.item.Message,
    H6,
    M6 <: org.scalax.asuna.mapper.item.Message,
    H7,
    M7 <: org.scalax.asuna.mapper.item.Message,
    H8,
    M8 <: org.scalax.asuna.mapper.item.Message,
    T1 <: org.scalax.asuna.mapper.item.TypeParam,
    T2 <: org.scalax.asuna.mapper.item.TypeParam,
    T3 <: org.scalax.asuna.mapper.item.TypeParam,
    T4 <: org.scalax.asuna.mapper.item.TypeParam,
    T5 <: org.scalax.asuna.mapper.item.TypeParam,
    T6 <: org.scalax.asuna.mapper.item.TypeParam,
    T7 <: org.scalax.asuna.mapper.item.TypeParam,
    T8 <: org.scalax.asuna.mapper.item.TypeParam
  ](
    implicit t1: org.scalax.asuna.mapper.item.Application[K, H1, T1],
    t2: org.scalax.asuna.mapper.item.Application[K, H2, T2],
    t3: org.scalax.asuna.mapper.item.Application[K, H3, T3],
    t4: org.scalax.asuna.mapper.item.Application[K, H4, T4],
    t5: org.scalax.asuna.mapper.item.Application[K, H5, T5],
    t6: org.scalax.asuna.mapper.item.Application[K, H6, T6],
    t7: org.scalax.asuna.mapper.item.Application[K, H7, T7],
    t8: org.scalax.asuna.mapper.item.Application[K, H8, T8]
  ): org.scalax.asuna.mapper.item.Application[K, org.scalax.asuna.ii.item.ItemTagWithMessage8[H1, M1, H2, M2, H3, M3, H4, M4, H5, M5, H6, M6, H7, M7, H8, M8], EatXyyType8[
    T1,
    T2,
    T3,
    T4,
    T5,
    T6,
    T7,
    T8
  ]] =
    new org.scalax.asuna.mapper.item.Application[
      K,
      org.scalax.asuna.ii.item.ItemTagWithMessage8[H1, M1, H2, M2, H3, M3, H4, M4, H5, M5, H6, M6, H7, M7, H8, M8],
      EatXyyType8[T1, T2, T3, T4, T5, T6, T7, T8]
    ] {
      override def application(context: org.scalax.asuna.mapper.item.Context[K]): K#M[EatXyyType8[T1, T2, T3, T4, T5, T6, T7, T8]] = {
        AppendEatXyy.xyy8(t1, t2, t3, t4, t5, t6, t7, t8).application(context)
      }
    }
  implicit def xyyWithMessage9[
    K <: org.scalax.asuna.mapper.item.KindContext,
    H1,
    M1 <: org.scalax.asuna.mapper.item.Message,
    H2,
    M2 <: org.scalax.asuna.mapper.item.Message,
    H3,
    M3 <: org.scalax.asuna.mapper.item.Message,
    H4,
    M4 <: org.scalax.asuna.mapper.item.Message,
    H5,
    M5 <: org.scalax.asuna.mapper.item.Message,
    H6,
    M6 <: org.scalax.asuna.mapper.item.Message,
    H7,
    M7 <: org.scalax.asuna.mapper.item.Message,
    H8,
    M8 <: org.scalax.asuna.mapper.item.Message,
    H9,
    M9 <: org.scalax.asuna.mapper.item.Message,
    T1 <: org.scalax.asuna.mapper.item.TypeParam,
    T2 <: org.scalax.asuna.mapper.item.TypeParam,
    T3 <: org.scalax.asuna.mapper.item.TypeParam,
    T4 <: org.scalax.asuna.mapper.item.TypeParam,
    T5 <: org.scalax.asuna.mapper.item.TypeParam,
    T6 <: org.scalax.asuna.mapper.item.TypeParam,
    T7 <: org.scalax.asuna.mapper.item.TypeParam,
    T8 <: org.scalax.asuna.mapper.item.TypeParam,
    T9 <: org.scalax.asuna.mapper.item.TypeParam
  ](
    implicit t1: org.scalax.asuna.mapper.item.Application[K, H1, T1],
    t2: org.scalax.asuna.mapper.item.Application[K, H2, T2],
    t3: org.scalax.asuna.mapper.item.Application[K, H3, T3],
    t4: org.scalax.asuna.mapper.item.Application[K, H4, T4],
    t5: org.scalax.asuna.mapper.item.Application[K, H5, T5],
    t6: org.scalax.asuna.mapper.item.Application[K, H6, T6],
    t7: org.scalax.asuna.mapper.item.Application[K, H7, T7],
    t8: org.scalax.asuna.mapper.item.Application[K, H8, T8],
    t9: org.scalax.asuna.mapper.item.Application[K, H9, T9]
  ): org.scalax.asuna.mapper.item.Application[K, org.scalax.asuna.ii.item.ItemTagWithMessage9[H1, M1, H2, M2, H3, M3, H4, M4, H5, M5, H6, M6, H7, M7, H8, M8, H9, M9], EatXyyType9[
    T1,
    T2,
    T3,
    T4,
    T5,
    T6,
    T7,
    T8,
    T9
  ]] =
    new org.scalax.asuna.mapper.item.Application[
      K,
      org.scalax.asuna.ii.item.ItemTagWithMessage9[H1, M1, H2, M2, H3, M3, H4, M4, H5, M5, H6, M6, H7, M7, H8, M8, H9, M9],
      EatXyyType9[T1, T2, T3, T4, T5, T6, T7, T8, T9]
    ] {
      override def application(context: org.scalax.asuna.mapper.item.Context[K]): K#M[EatXyyType9[T1, T2, T3, T4, T5, T6, T7, T8, T9]] = {
        AppendEatXyy.xyy9(t1, t2, t3, t4, t5, t6, t7, t8, t9).application(context)
      }
    }
  implicit def xyyWithMessage10[
    K <: org.scalax.asuna.mapper.item.KindContext,
    H1,
    M1 <: org.scalax.asuna.mapper.item.Message,
    H2,
    M2 <: org.scalax.asuna.mapper.item.Message,
    H3,
    M3 <: org.scalax.asuna.mapper.item.Message,
    H4,
    M4 <: org.scalax.asuna.mapper.item.Message,
    H5,
    M5 <: org.scalax.asuna.mapper.item.Message,
    H6,
    M6 <: org.scalax.asuna.mapper.item.Message,
    H7,
    M7 <: org.scalax.asuna.mapper.item.Message,
    H8,
    M8 <: org.scalax.asuna.mapper.item.Message,
    H9,
    M9 <: org.scalax.asuna.mapper.item.Message,
    H10,
    M10 <: org.scalax.asuna.mapper.item.Message,
    T1 <: org.scalax.asuna.mapper.item.TypeParam,
    T2 <: org.scalax.asuna.mapper.item.TypeParam,
    T3 <: org.scalax.asuna.mapper.item.TypeParam,
    T4 <: org.scalax.asuna.mapper.item.TypeParam,
    T5 <: org.scalax.asuna.mapper.item.TypeParam,
    T6 <: org.scalax.asuna.mapper.item.TypeParam,
    T7 <: org.scalax.asuna.mapper.item.TypeParam,
    T8 <: org.scalax.asuna.mapper.item.TypeParam,
    T9 <: org.scalax.asuna.mapper.item.TypeParam,
    T10 <: org.scalax.asuna.mapper.item.TypeParam
  ](
    implicit t1: org.scalax.asuna.mapper.item.Application[K, H1, T1],
    t2: org.scalax.asuna.mapper.item.Application[K, H2, T2],
    t3: org.scalax.asuna.mapper.item.Application[K, H3, T3],
    t4: org.scalax.asuna.mapper.item.Application[K, H4, T4],
    t5: org.scalax.asuna.mapper.item.Application[K, H5, T5],
    t6: org.scalax.asuna.mapper.item.Application[K, H6, T6],
    t7: org.scalax.asuna.mapper.item.Application[K, H7, T7],
    t8: org.scalax.asuna.mapper.item.Application[K, H8, T8],
    t9: org.scalax.asuna.mapper.item.Application[K, H9, T9],
    t10: org.scalax.asuna.mapper.item.Application[K, H10, T10]
  ): org.scalax.asuna.mapper.item.Application[K, org.scalax.asuna.ii.item.ItemTagWithMessage10[
    H1,
    M1,
    H2,
    M2,
    H3,
    M3,
    H4,
    M4,
    H5,
    M5,
    H6,
    M6,
    H7,
    M7,
    H8,
    M8,
    H9,
    M9,
    H10,
    M10
  ], EatXyyType10[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10]] =
    new org.scalax.asuna.mapper.item.Application[
      K,
      org.scalax.asuna.ii.item.ItemTagWithMessage10[H1, M1, H2, M2, H3, M3, H4, M4, H5, M5, H6, M6, H7, M7, H8, M8, H9, M9, H10, M10],
      EatXyyType10[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10]
    ] {
      override def application(context: org.scalax.asuna.mapper.item.Context[K]): K#M[EatXyyType10[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10]] = {
        AppendEatXyy.xyy10(t1, t2, t3, t4, t5, t6, t7, t8, t9, t10).application(context)
      }
    }
  implicit def xyyWithMessage11[
    K <: org.scalax.asuna.mapper.item.KindContext,
    H1,
    M1 <: org.scalax.asuna.mapper.item.Message,
    H2,
    M2 <: org.scalax.asuna.mapper.item.Message,
    H3,
    M3 <: org.scalax.asuna.mapper.item.Message,
    H4,
    M4 <: org.scalax.asuna.mapper.item.Message,
    H5,
    M5 <: org.scalax.asuna.mapper.item.Message,
    H6,
    M6 <: org.scalax.asuna.mapper.item.Message,
    H7,
    M7 <: org.scalax.asuna.mapper.item.Message,
    H8,
    M8 <: org.scalax.asuna.mapper.item.Message,
    H9,
    M9 <: org.scalax.asuna.mapper.item.Message,
    H10,
    M10 <: org.scalax.asuna.mapper.item.Message,
    H11,
    M11 <: org.scalax.asuna.mapper.item.Message,
    T1 <: org.scalax.asuna.mapper.item.TypeParam,
    T2 <: org.scalax.asuna.mapper.item.TypeParam,
    T3 <: org.scalax.asuna.mapper.item.TypeParam,
    T4 <: org.scalax.asuna.mapper.item.TypeParam,
    T5 <: org.scalax.asuna.mapper.item.TypeParam,
    T6 <: org.scalax.asuna.mapper.item.TypeParam,
    T7 <: org.scalax.asuna.mapper.item.TypeParam,
    T8 <: org.scalax.asuna.mapper.item.TypeParam,
    T9 <: org.scalax.asuna.mapper.item.TypeParam,
    T10 <: org.scalax.asuna.mapper.item.TypeParam,
    T11 <: org.scalax.asuna.mapper.item.TypeParam
  ](
    implicit t1: org.scalax.asuna.mapper.item.Application[K, H1, T1],
    t2: org.scalax.asuna.mapper.item.Application[K, H2, T2],
    t3: org.scalax.asuna.mapper.item.Application[K, H3, T3],
    t4: org.scalax.asuna.mapper.item.Application[K, H4, T4],
    t5: org.scalax.asuna.mapper.item.Application[K, H5, T5],
    t6: org.scalax.asuna.mapper.item.Application[K, H6, T6],
    t7: org.scalax.asuna.mapper.item.Application[K, H7, T7],
    t8: org.scalax.asuna.mapper.item.Application[K, H8, T8],
    t9: org.scalax.asuna.mapper.item.Application[K, H9, T9],
    t10: org.scalax.asuna.mapper.item.Application[K, H10, T10],
    t11: org.scalax.asuna.mapper.item.Application[K, H11, T11]
  ): org.scalax.asuna.mapper.item.Application[K, org.scalax.asuna.ii.item.ItemTagWithMessage11[
    H1,
    M1,
    H2,
    M2,
    H3,
    M3,
    H4,
    M4,
    H5,
    M5,
    H6,
    M6,
    H7,
    M7,
    H8,
    M8,
    H9,
    M9,
    H10,
    M10,
    H11,
    M11
  ], EatXyyType11[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11]] =
    new org.scalax.asuna.mapper.item.Application[
      K,
      org.scalax.asuna.ii.item.ItemTagWithMessage11[H1, M1, H2, M2, H3, M3, H4, M4, H5, M5, H6, M6, H7, M7, H8, M8, H9, M9, H10, M10, H11, M11],
      EatXyyType11[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11]
    ] {
      override def application(context: org.scalax.asuna.mapper.item.Context[K]): K#M[EatXyyType11[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11]] = {
        AppendEatXyy.xyy11(t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11).application(context)
      }
    }
  implicit def xyyWithMessage12[
    K <: org.scalax.asuna.mapper.item.KindContext,
    H1,
    M1 <: org.scalax.asuna.mapper.item.Message,
    H2,
    M2 <: org.scalax.asuna.mapper.item.Message,
    H3,
    M3 <: org.scalax.asuna.mapper.item.Message,
    H4,
    M4 <: org.scalax.asuna.mapper.item.Message,
    H5,
    M5 <: org.scalax.asuna.mapper.item.Message,
    H6,
    M6 <: org.scalax.asuna.mapper.item.Message,
    H7,
    M7 <: org.scalax.asuna.mapper.item.Message,
    H8,
    M8 <: org.scalax.asuna.mapper.item.Message,
    H9,
    M9 <: org.scalax.asuna.mapper.item.Message,
    H10,
    M10 <: org.scalax.asuna.mapper.item.Message,
    H11,
    M11 <: org.scalax.asuna.mapper.item.Message,
    H12,
    M12 <: org.scalax.asuna.mapper.item.Message,
    T1 <: org.scalax.asuna.mapper.item.TypeParam,
    T2 <: org.scalax.asuna.mapper.item.TypeParam,
    T3 <: org.scalax.asuna.mapper.item.TypeParam,
    T4 <: org.scalax.asuna.mapper.item.TypeParam,
    T5 <: org.scalax.asuna.mapper.item.TypeParam,
    T6 <: org.scalax.asuna.mapper.item.TypeParam,
    T7 <: org.scalax.asuna.mapper.item.TypeParam,
    T8 <: org.scalax.asuna.mapper.item.TypeParam,
    T9 <: org.scalax.asuna.mapper.item.TypeParam,
    T10 <: org.scalax.asuna.mapper.item.TypeParam,
    T11 <: org.scalax.asuna.mapper.item.TypeParam,
    T12 <: org.scalax.asuna.mapper.item.TypeParam
  ](
    implicit t1: org.scalax.asuna.mapper.item.Application[K, H1, T1],
    t2: org.scalax.asuna.mapper.item.Application[K, H2, T2],
    t3: org.scalax.asuna.mapper.item.Application[K, H3, T3],
    t4: org.scalax.asuna.mapper.item.Application[K, H4, T4],
    t5: org.scalax.asuna.mapper.item.Application[K, H5, T5],
    t6: org.scalax.asuna.mapper.item.Application[K, H6, T6],
    t7: org.scalax.asuna.mapper.item.Application[K, H7, T7],
    t8: org.scalax.asuna.mapper.item.Application[K, H8, T8],
    t9: org.scalax.asuna.mapper.item.Application[K, H9, T9],
    t10: org.scalax.asuna.mapper.item.Application[K, H10, T10],
    t11: org.scalax.asuna.mapper.item.Application[K, H11, T11],
    t12: org.scalax.asuna.mapper.item.Application[K, H12, T12]
  ): org.scalax.asuna.mapper.item.Application[K, org.scalax.asuna.ii.item.ItemTagWithMessage12[
    H1,
    M1,
    H2,
    M2,
    H3,
    M3,
    H4,
    M4,
    H5,
    M5,
    H6,
    M6,
    H7,
    M7,
    H8,
    M8,
    H9,
    M9,
    H10,
    M10,
    H11,
    M11,
    H12,
    M12
  ], EatXyyType12[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12]] =
    new org.scalax.asuna.mapper.item.Application[
      K,
      org.scalax.asuna.ii.item.ItemTagWithMessage12[H1, M1, H2, M2, H3, M3, H4, M4, H5, M5, H6, M6, H7, M7, H8, M8, H9, M9, H10, M10, H11, M11, H12, M12],
      EatXyyType12[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12]
    ] {
      override def application(context: org.scalax.asuna.mapper.item.Context[K]): K#M[EatXyyType12[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12]] = {
        AppendEatXyy.xyy12(t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12).application(context)
      }
    }
  implicit def xyyWithMessage13[
    K <: org.scalax.asuna.mapper.item.KindContext,
    H1,
    M1 <: org.scalax.asuna.mapper.item.Message,
    H2,
    M2 <: org.scalax.asuna.mapper.item.Message,
    H3,
    M3 <: org.scalax.asuna.mapper.item.Message,
    H4,
    M4 <: org.scalax.asuna.mapper.item.Message,
    H5,
    M5 <: org.scalax.asuna.mapper.item.Message,
    H6,
    M6 <: org.scalax.asuna.mapper.item.Message,
    H7,
    M7 <: org.scalax.asuna.mapper.item.Message,
    H8,
    M8 <: org.scalax.asuna.mapper.item.Message,
    H9,
    M9 <: org.scalax.asuna.mapper.item.Message,
    H10,
    M10 <: org.scalax.asuna.mapper.item.Message,
    H11,
    M11 <: org.scalax.asuna.mapper.item.Message,
    H12,
    M12 <: org.scalax.asuna.mapper.item.Message,
    H13,
    M13 <: org.scalax.asuna.mapper.item.Message,
    T1 <: org.scalax.asuna.mapper.item.TypeParam,
    T2 <: org.scalax.asuna.mapper.item.TypeParam,
    T3 <: org.scalax.asuna.mapper.item.TypeParam,
    T4 <: org.scalax.asuna.mapper.item.TypeParam,
    T5 <: org.scalax.asuna.mapper.item.TypeParam,
    T6 <: org.scalax.asuna.mapper.item.TypeParam,
    T7 <: org.scalax.asuna.mapper.item.TypeParam,
    T8 <: org.scalax.asuna.mapper.item.TypeParam,
    T9 <: org.scalax.asuna.mapper.item.TypeParam,
    T10 <: org.scalax.asuna.mapper.item.TypeParam,
    T11 <: org.scalax.asuna.mapper.item.TypeParam,
    T12 <: org.scalax.asuna.mapper.item.TypeParam,
    T13 <: org.scalax.asuna.mapper.item.TypeParam
  ](
    implicit t1: org.scalax.asuna.mapper.item.Application[K, H1, T1],
    t2: org.scalax.asuna.mapper.item.Application[K, H2, T2],
    t3: org.scalax.asuna.mapper.item.Application[K, H3, T3],
    t4: org.scalax.asuna.mapper.item.Application[K, H4, T4],
    t5: org.scalax.asuna.mapper.item.Application[K, H5, T5],
    t6: org.scalax.asuna.mapper.item.Application[K, H6, T6],
    t7: org.scalax.asuna.mapper.item.Application[K, H7, T7],
    t8: org.scalax.asuna.mapper.item.Application[K, H8, T8],
    t9: org.scalax.asuna.mapper.item.Application[K, H9, T9],
    t10: org.scalax.asuna.mapper.item.Application[K, H10, T10],
    t11: org.scalax.asuna.mapper.item.Application[K, H11, T11],
    t12: org.scalax.asuna.mapper.item.Application[K, H12, T12],
    t13: org.scalax.asuna.mapper.item.Application[K, H13, T13]
  ): org.scalax.asuna.mapper.item.Application[K, org.scalax.asuna.ii.item.ItemTagWithMessage13[
    H1,
    M1,
    H2,
    M2,
    H3,
    M3,
    H4,
    M4,
    H5,
    M5,
    H6,
    M6,
    H7,
    M7,
    H8,
    M8,
    H9,
    M9,
    H10,
    M10,
    H11,
    M11,
    H12,
    M12,
    H13,
    M13
  ], EatXyyType13[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13]] =
    new org.scalax.asuna.mapper.item.Application[
      K,
      org.scalax.asuna.ii.item.ItemTagWithMessage13[H1, M1, H2, M2, H3, M3, H4, M4, H5, M5, H6, M6, H7, M7, H8, M8, H9, M9, H10, M10, H11, M11, H12, M12, H13, M13],
      EatXyyType13[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13]
    ] {
      override def application(context: org.scalax.asuna.mapper.item.Context[K]): K#M[EatXyyType13[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13]] = {
        AppendEatXyy.xyy13(t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13).application(context)
      }
    }
  implicit def xyyWithMessage14[
    K <: org.scalax.asuna.mapper.item.KindContext,
    H1,
    M1 <: org.scalax.asuna.mapper.item.Message,
    H2,
    M2 <: org.scalax.asuna.mapper.item.Message,
    H3,
    M3 <: org.scalax.asuna.mapper.item.Message,
    H4,
    M4 <: org.scalax.asuna.mapper.item.Message,
    H5,
    M5 <: org.scalax.asuna.mapper.item.Message,
    H6,
    M6 <: org.scalax.asuna.mapper.item.Message,
    H7,
    M7 <: org.scalax.asuna.mapper.item.Message,
    H8,
    M8 <: org.scalax.asuna.mapper.item.Message,
    H9,
    M9 <: org.scalax.asuna.mapper.item.Message,
    H10,
    M10 <: org.scalax.asuna.mapper.item.Message,
    H11,
    M11 <: org.scalax.asuna.mapper.item.Message,
    H12,
    M12 <: org.scalax.asuna.mapper.item.Message,
    H13,
    M13 <: org.scalax.asuna.mapper.item.Message,
    H14,
    M14 <: org.scalax.asuna.mapper.item.Message,
    T1 <: org.scalax.asuna.mapper.item.TypeParam,
    T2 <: org.scalax.asuna.mapper.item.TypeParam,
    T3 <: org.scalax.asuna.mapper.item.TypeParam,
    T4 <: org.scalax.asuna.mapper.item.TypeParam,
    T5 <: org.scalax.asuna.mapper.item.TypeParam,
    T6 <: org.scalax.asuna.mapper.item.TypeParam,
    T7 <: org.scalax.asuna.mapper.item.TypeParam,
    T8 <: org.scalax.asuna.mapper.item.TypeParam,
    T9 <: org.scalax.asuna.mapper.item.TypeParam,
    T10 <: org.scalax.asuna.mapper.item.TypeParam,
    T11 <: org.scalax.asuna.mapper.item.TypeParam,
    T12 <: org.scalax.asuna.mapper.item.TypeParam,
    T13 <: org.scalax.asuna.mapper.item.TypeParam,
    T14 <: org.scalax.asuna.mapper.item.TypeParam
  ](
    implicit t1: org.scalax.asuna.mapper.item.Application[K, H1, T1],
    t2: org.scalax.asuna.mapper.item.Application[K, H2, T2],
    t3: org.scalax.asuna.mapper.item.Application[K, H3, T3],
    t4: org.scalax.asuna.mapper.item.Application[K, H4, T4],
    t5: org.scalax.asuna.mapper.item.Application[K, H5, T5],
    t6: org.scalax.asuna.mapper.item.Application[K, H6, T6],
    t7: org.scalax.asuna.mapper.item.Application[K, H7, T7],
    t8: org.scalax.asuna.mapper.item.Application[K, H8, T8],
    t9: org.scalax.asuna.mapper.item.Application[K, H9, T9],
    t10: org.scalax.asuna.mapper.item.Application[K, H10, T10],
    t11: org.scalax.asuna.mapper.item.Application[K, H11, T11],
    t12: org.scalax.asuna.mapper.item.Application[K, H12, T12],
    t13: org.scalax.asuna.mapper.item.Application[K, H13, T13],
    t14: org.scalax.asuna.mapper.item.Application[K, H14, T14]
  ): org.scalax.asuna.mapper.item.Application[K, org.scalax.asuna.ii.item.ItemTagWithMessage14[
    H1,
    M1,
    H2,
    M2,
    H3,
    M3,
    H4,
    M4,
    H5,
    M5,
    H6,
    M6,
    H7,
    M7,
    H8,
    M8,
    H9,
    M9,
    H10,
    M10,
    H11,
    M11,
    H12,
    M12,
    H13,
    M13,
    H14,
    M14
  ], EatXyyType14[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14]] =
    new org.scalax.asuna.mapper.item.Application[K, org.scalax.asuna.ii.item.ItemTagWithMessage14[
      H1,
      M1,
      H2,
      M2,
      H3,
      M3,
      H4,
      M4,
      H5,
      M5,
      H6,
      M6,
      H7,
      M7,
      H8,
      M8,
      H9,
      M9,
      H10,
      M10,
      H11,
      M11,
      H12,
      M12,
      H13,
      M13,
      H14,
      M14
    ], EatXyyType14[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14]] {
      override def application(context: org.scalax.asuna.mapper.item.Context[K]): K#M[EatXyyType14[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14]] = {
        AppendEatXyy.xyy14(t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14).application(context)
      }
    }
  implicit def xyyWithMessage15[
    K <: org.scalax.asuna.mapper.item.KindContext,
    H1,
    M1 <: org.scalax.asuna.mapper.item.Message,
    H2,
    M2 <: org.scalax.asuna.mapper.item.Message,
    H3,
    M3 <: org.scalax.asuna.mapper.item.Message,
    H4,
    M4 <: org.scalax.asuna.mapper.item.Message,
    H5,
    M5 <: org.scalax.asuna.mapper.item.Message,
    H6,
    M6 <: org.scalax.asuna.mapper.item.Message,
    H7,
    M7 <: org.scalax.asuna.mapper.item.Message,
    H8,
    M8 <: org.scalax.asuna.mapper.item.Message,
    H9,
    M9 <: org.scalax.asuna.mapper.item.Message,
    H10,
    M10 <: org.scalax.asuna.mapper.item.Message,
    H11,
    M11 <: org.scalax.asuna.mapper.item.Message,
    H12,
    M12 <: org.scalax.asuna.mapper.item.Message,
    H13,
    M13 <: org.scalax.asuna.mapper.item.Message,
    H14,
    M14 <: org.scalax.asuna.mapper.item.Message,
    H15,
    M15 <: org.scalax.asuna.mapper.item.Message,
    T1 <: org.scalax.asuna.mapper.item.TypeParam,
    T2 <: org.scalax.asuna.mapper.item.TypeParam,
    T3 <: org.scalax.asuna.mapper.item.TypeParam,
    T4 <: org.scalax.asuna.mapper.item.TypeParam,
    T5 <: org.scalax.asuna.mapper.item.TypeParam,
    T6 <: org.scalax.asuna.mapper.item.TypeParam,
    T7 <: org.scalax.asuna.mapper.item.TypeParam,
    T8 <: org.scalax.asuna.mapper.item.TypeParam,
    T9 <: org.scalax.asuna.mapper.item.TypeParam,
    T10 <: org.scalax.asuna.mapper.item.TypeParam,
    T11 <: org.scalax.asuna.mapper.item.TypeParam,
    T12 <: org.scalax.asuna.mapper.item.TypeParam,
    T13 <: org.scalax.asuna.mapper.item.TypeParam,
    T14 <: org.scalax.asuna.mapper.item.TypeParam,
    T15 <: org.scalax.asuna.mapper.item.TypeParam
  ](
    implicit t1: org.scalax.asuna.mapper.item.Application[K, H1, T1],
    t2: org.scalax.asuna.mapper.item.Application[K, H2, T2],
    t3: org.scalax.asuna.mapper.item.Application[K, H3, T3],
    t4: org.scalax.asuna.mapper.item.Application[K, H4, T4],
    t5: org.scalax.asuna.mapper.item.Application[K, H5, T5],
    t6: org.scalax.asuna.mapper.item.Application[K, H6, T6],
    t7: org.scalax.asuna.mapper.item.Application[K, H7, T7],
    t8: org.scalax.asuna.mapper.item.Application[K, H8, T8],
    t9: org.scalax.asuna.mapper.item.Application[K, H9, T9],
    t10: org.scalax.asuna.mapper.item.Application[K, H10, T10],
    t11: org.scalax.asuna.mapper.item.Application[K, H11, T11],
    t12: org.scalax.asuna.mapper.item.Application[K, H12, T12],
    t13: org.scalax.asuna.mapper.item.Application[K, H13, T13],
    t14: org.scalax.asuna.mapper.item.Application[K, H14, T14],
    t15: org.scalax.asuna.mapper.item.Application[K, H15, T15]
  ): org.scalax.asuna.mapper.item.Application[K, org.scalax.asuna.ii.item.ItemTagWithMessage15[
    H1,
    M1,
    H2,
    M2,
    H3,
    M3,
    H4,
    M4,
    H5,
    M5,
    H6,
    M6,
    H7,
    M7,
    H8,
    M8,
    H9,
    M9,
    H10,
    M10,
    H11,
    M11,
    H12,
    M12,
    H13,
    M13,
    H14,
    M14,
    H15,
    M15
  ], EatXyyType15[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15]] =
    new org.scalax.asuna.mapper.item.Application[K, org.scalax.asuna.ii.item.ItemTagWithMessage15[
      H1,
      M1,
      H2,
      M2,
      H3,
      M3,
      H4,
      M4,
      H5,
      M5,
      H6,
      M6,
      H7,
      M7,
      H8,
      M8,
      H9,
      M9,
      H10,
      M10,
      H11,
      M11,
      H12,
      M12,
      H13,
      M13,
      H14,
      M14,
      H15,
      M15
    ], EatXyyType15[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15]] {
      override def application(context: org.scalax.asuna.mapper.item.Context[K]): K#M[EatXyyType15[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15]] = {
        AppendEatXyy.xyy15(t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15).application(context)
      }
    }
  implicit def xyyWithMessage16[
    K <: org.scalax.asuna.mapper.item.KindContext,
    H1,
    M1 <: org.scalax.asuna.mapper.item.Message,
    H2,
    M2 <: org.scalax.asuna.mapper.item.Message,
    H3,
    M3 <: org.scalax.asuna.mapper.item.Message,
    H4,
    M4 <: org.scalax.asuna.mapper.item.Message,
    H5,
    M5 <: org.scalax.asuna.mapper.item.Message,
    H6,
    M6 <: org.scalax.asuna.mapper.item.Message,
    H7,
    M7 <: org.scalax.asuna.mapper.item.Message,
    H8,
    M8 <: org.scalax.asuna.mapper.item.Message,
    H9,
    M9 <: org.scalax.asuna.mapper.item.Message,
    H10,
    M10 <: org.scalax.asuna.mapper.item.Message,
    H11,
    M11 <: org.scalax.asuna.mapper.item.Message,
    H12,
    M12 <: org.scalax.asuna.mapper.item.Message,
    H13,
    M13 <: org.scalax.asuna.mapper.item.Message,
    H14,
    M14 <: org.scalax.asuna.mapper.item.Message,
    H15,
    M15 <: org.scalax.asuna.mapper.item.Message,
    H16,
    M16 <: org.scalax.asuna.mapper.item.Message,
    T1 <: org.scalax.asuna.mapper.item.TypeParam,
    T2 <: org.scalax.asuna.mapper.item.TypeParam,
    T3 <: org.scalax.asuna.mapper.item.TypeParam,
    T4 <: org.scalax.asuna.mapper.item.TypeParam,
    T5 <: org.scalax.asuna.mapper.item.TypeParam,
    T6 <: org.scalax.asuna.mapper.item.TypeParam,
    T7 <: org.scalax.asuna.mapper.item.TypeParam,
    T8 <: org.scalax.asuna.mapper.item.TypeParam,
    T9 <: org.scalax.asuna.mapper.item.TypeParam,
    T10 <: org.scalax.asuna.mapper.item.TypeParam,
    T11 <: org.scalax.asuna.mapper.item.TypeParam,
    T12 <: org.scalax.asuna.mapper.item.TypeParam,
    T13 <: org.scalax.asuna.mapper.item.TypeParam,
    T14 <: org.scalax.asuna.mapper.item.TypeParam,
    T15 <: org.scalax.asuna.mapper.item.TypeParam,
    T16 <: org.scalax.asuna.mapper.item.TypeParam
  ](
    implicit t1: org.scalax.asuna.mapper.item.Application[K, H1, T1],
    t2: org.scalax.asuna.mapper.item.Application[K, H2, T2],
    t3: org.scalax.asuna.mapper.item.Application[K, H3, T3],
    t4: org.scalax.asuna.mapper.item.Application[K, H4, T4],
    t5: org.scalax.asuna.mapper.item.Application[K, H5, T5],
    t6: org.scalax.asuna.mapper.item.Application[K, H6, T6],
    t7: org.scalax.asuna.mapper.item.Application[K, H7, T7],
    t8: org.scalax.asuna.mapper.item.Application[K, H8, T8],
    t9: org.scalax.asuna.mapper.item.Application[K, H9, T9],
    t10: org.scalax.asuna.mapper.item.Application[K, H10, T10],
    t11: org.scalax.asuna.mapper.item.Application[K, H11, T11],
    t12: org.scalax.asuna.mapper.item.Application[K, H12, T12],
    t13: org.scalax.asuna.mapper.item.Application[K, H13, T13],
    t14: org.scalax.asuna.mapper.item.Application[K, H14, T14],
    t15: org.scalax.asuna.mapper.item.Application[K, H15, T15],
    t16: org.scalax.asuna.mapper.item.Application[K, H16, T16]
  ): org.scalax.asuna.mapper.item.Application[K, org.scalax.asuna.ii.item.ItemTagWithMessage16[
    H1,
    M1,
    H2,
    M2,
    H3,
    M3,
    H4,
    M4,
    H5,
    M5,
    H6,
    M6,
    H7,
    M7,
    H8,
    M8,
    H9,
    M9,
    H10,
    M10,
    H11,
    M11,
    H12,
    M12,
    H13,
    M13,
    H14,
    M14,
    H15,
    M15,
    H16,
    M16
  ], EatXyyType16[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16]] =
    new org.scalax.asuna.mapper.item.Application[K, org.scalax.asuna.ii.item.ItemTagWithMessage16[
      H1,
      M1,
      H2,
      M2,
      H3,
      M3,
      H4,
      M4,
      H5,
      M5,
      H6,
      M6,
      H7,
      M7,
      H8,
      M8,
      H9,
      M9,
      H10,
      M10,
      H11,
      M11,
      H12,
      M12,
      H13,
      M13,
      H14,
      M14,
      H15,
      M15,
      H16,
      M16
    ], EatXyyType16[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16]] {
      override def application(
        context: org.scalax.asuna.mapper.item.Context[K]
      ): K#M[EatXyyType16[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16]] = {
        AppendEatXyy.xyy16(t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16).application(context)
      }
    }
  implicit def xyyWithMessage17[
    K <: org.scalax.asuna.mapper.item.KindContext,
    H1,
    M1 <: org.scalax.asuna.mapper.item.Message,
    H2,
    M2 <: org.scalax.asuna.mapper.item.Message,
    H3,
    M3 <: org.scalax.asuna.mapper.item.Message,
    H4,
    M4 <: org.scalax.asuna.mapper.item.Message,
    H5,
    M5 <: org.scalax.asuna.mapper.item.Message,
    H6,
    M6 <: org.scalax.asuna.mapper.item.Message,
    H7,
    M7 <: org.scalax.asuna.mapper.item.Message,
    H8,
    M8 <: org.scalax.asuna.mapper.item.Message,
    H9,
    M9 <: org.scalax.asuna.mapper.item.Message,
    H10,
    M10 <: org.scalax.asuna.mapper.item.Message,
    H11,
    M11 <: org.scalax.asuna.mapper.item.Message,
    H12,
    M12 <: org.scalax.asuna.mapper.item.Message,
    H13,
    M13 <: org.scalax.asuna.mapper.item.Message,
    H14,
    M14 <: org.scalax.asuna.mapper.item.Message,
    H15,
    M15 <: org.scalax.asuna.mapper.item.Message,
    H16,
    M16 <: org.scalax.asuna.mapper.item.Message,
    H17,
    M17 <: org.scalax.asuna.mapper.item.Message,
    T1 <: org.scalax.asuna.mapper.item.TypeParam,
    T2 <: org.scalax.asuna.mapper.item.TypeParam,
    T3 <: org.scalax.asuna.mapper.item.TypeParam,
    T4 <: org.scalax.asuna.mapper.item.TypeParam,
    T5 <: org.scalax.asuna.mapper.item.TypeParam,
    T6 <: org.scalax.asuna.mapper.item.TypeParam,
    T7 <: org.scalax.asuna.mapper.item.TypeParam,
    T8 <: org.scalax.asuna.mapper.item.TypeParam,
    T9 <: org.scalax.asuna.mapper.item.TypeParam,
    T10 <: org.scalax.asuna.mapper.item.TypeParam,
    T11 <: org.scalax.asuna.mapper.item.TypeParam,
    T12 <: org.scalax.asuna.mapper.item.TypeParam,
    T13 <: org.scalax.asuna.mapper.item.TypeParam,
    T14 <: org.scalax.asuna.mapper.item.TypeParam,
    T15 <: org.scalax.asuna.mapper.item.TypeParam,
    T16 <: org.scalax.asuna.mapper.item.TypeParam,
    T17 <: org.scalax.asuna.mapper.item.TypeParam
  ](
    implicit t1: org.scalax.asuna.mapper.item.Application[K, H1, T1],
    t2: org.scalax.asuna.mapper.item.Application[K, H2, T2],
    t3: org.scalax.asuna.mapper.item.Application[K, H3, T3],
    t4: org.scalax.asuna.mapper.item.Application[K, H4, T4],
    t5: org.scalax.asuna.mapper.item.Application[K, H5, T5],
    t6: org.scalax.asuna.mapper.item.Application[K, H6, T6],
    t7: org.scalax.asuna.mapper.item.Application[K, H7, T7],
    t8: org.scalax.asuna.mapper.item.Application[K, H8, T8],
    t9: org.scalax.asuna.mapper.item.Application[K, H9, T9],
    t10: org.scalax.asuna.mapper.item.Application[K, H10, T10],
    t11: org.scalax.asuna.mapper.item.Application[K, H11, T11],
    t12: org.scalax.asuna.mapper.item.Application[K, H12, T12],
    t13: org.scalax.asuna.mapper.item.Application[K, H13, T13],
    t14: org.scalax.asuna.mapper.item.Application[K, H14, T14],
    t15: org.scalax.asuna.mapper.item.Application[K, H15, T15],
    t16: org.scalax.asuna.mapper.item.Application[K, H16, T16],
    t17: org.scalax.asuna.mapper.item.Application[K, H17, T17]
  ): org.scalax.asuna.mapper.item.Application[K, org.scalax.asuna.ii.item.ItemTagWithMessage17[
    H1,
    M1,
    H2,
    M2,
    H3,
    M3,
    H4,
    M4,
    H5,
    M5,
    H6,
    M6,
    H7,
    M7,
    H8,
    M8,
    H9,
    M9,
    H10,
    M10,
    H11,
    M11,
    H12,
    M12,
    H13,
    M13,
    H14,
    M14,
    H15,
    M15,
    H16,
    M16,
    H17,
    M17
  ], EatXyyType17[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17]] =
    new org.scalax.asuna.mapper.item.Application[K, org.scalax.asuna.ii.item.ItemTagWithMessage17[
      H1,
      M1,
      H2,
      M2,
      H3,
      M3,
      H4,
      M4,
      H5,
      M5,
      H6,
      M6,
      H7,
      M7,
      H8,
      M8,
      H9,
      M9,
      H10,
      M10,
      H11,
      M11,
      H12,
      M12,
      H13,
      M13,
      H14,
      M14,
      H15,
      M15,
      H16,
      M16,
      H17,
      M17
    ], EatXyyType17[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17]] {
      override def application(
        context: org.scalax.asuna.mapper.item.Context[K]
      ): K#M[EatXyyType17[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17]] = {
        AppendEatXyy.xyy17(t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17).application(context)
      }
    }
  implicit def xyyWithMessage18[
    K <: org.scalax.asuna.mapper.item.KindContext,
    H1,
    M1 <: org.scalax.asuna.mapper.item.Message,
    H2,
    M2 <: org.scalax.asuna.mapper.item.Message,
    H3,
    M3 <: org.scalax.asuna.mapper.item.Message,
    H4,
    M4 <: org.scalax.asuna.mapper.item.Message,
    H5,
    M5 <: org.scalax.asuna.mapper.item.Message,
    H6,
    M6 <: org.scalax.asuna.mapper.item.Message,
    H7,
    M7 <: org.scalax.asuna.mapper.item.Message,
    H8,
    M8 <: org.scalax.asuna.mapper.item.Message,
    H9,
    M9 <: org.scalax.asuna.mapper.item.Message,
    H10,
    M10 <: org.scalax.asuna.mapper.item.Message,
    H11,
    M11 <: org.scalax.asuna.mapper.item.Message,
    H12,
    M12 <: org.scalax.asuna.mapper.item.Message,
    H13,
    M13 <: org.scalax.asuna.mapper.item.Message,
    H14,
    M14 <: org.scalax.asuna.mapper.item.Message,
    H15,
    M15 <: org.scalax.asuna.mapper.item.Message,
    H16,
    M16 <: org.scalax.asuna.mapper.item.Message,
    H17,
    M17 <: org.scalax.asuna.mapper.item.Message,
    H18,
    M18 <: org.scalax.asuna.mapper.item.Message,
    T1 <: org.scalax.asuna.mapper.item.TypeParam,
    T2 <: org.scalax.asuna.mapper.item.TypeParam,
    T3 <: org.scalax.asuna.mapper.item.TypeParam,
    T4 <: org.scalax.asuna.mapper.item.TypeParam,
    T5 <: org.scalax.asuna.mapper.item.TypeParam,
    T6 <: org.scalax.asuna.mapper.item.TypeParam,
    T7 <: org.scalax.asuna.mapper.item.TypeParam,
    T8 <: org.scalax.asuna.mapper.item.TypeParam,
    T9 <: org.scalax.asuna.mapper.item.TypeParam,
    T10 <: org.scalax.asuna.mapper.item.TypeParam,
    T11 <: org.scalax.asuna.mapper.item.TypeParam,
    T12 <: org.scalax.asuna.mapper.item.TypeParam,
    T13 <: org.scalax.asuna.mapper.item.TypeParam,
    T14 <: org.scalax.asuna.mapper.item.TypeParam,
    T15 <: org.scalax.asuna.mapper.item.TypeParam,
    T16 <: org.scalax.asuna.mapper.item.TypeParam,
    T17 <: org.scalax.asuna.mapper.item.TypeParam,
    T18 <: org.scalax.asuna.mapper.item.TypeParam
  ](
    implicit t1: org.scalax.asuna.mapper.item.Application[K, H1, T1],
    t2: org.scalax.asuna.mapper.item.Application[K, H2, T2],
    t3: org.scalax.asuna.mapper.item.Application[K, H3, T3],
    t4: org.scalax.asuna.mapper.item.Application[K, H4, T4],
    t5: org.scalax.asuna.mapper.item.Application[K, H5, T5],
    t6: org.scalax.asuna.mapper.item.Application[K, H6, T6],
    t7: org.scalax.asuna.mapper.item.Application[K, H7, T7],
    t8: org.scalax.asuna.mapper.item.Application[K, H8, T8],
    t9: org.scalax.asuna.mapper.item.Application[K, H9, T9],
    t10: org.scalax.asuna.mapper.item.Application[K, H10, T10],
    t11: org.scalax.asuna.mapper.item.Application[K, H11, T11],
    t12: org.scalax.asuna.mapper.item.Application[K, H12, T12],
    t13: org.scalax.asuna.mapper.item.Application[K, H13, T13],
    t14: org.scalax.asuna.mapper.item.Application[K, H14, T14],
    t15: org.scalax.asuna.mapper.item.Application[K, H15, T15],
    t16: org.scalax.asuna.mapper.item.Application[K, H16, T16],
    t17: org.scalax.asuna.mapper.item.Application[K, H17, T17],
    t18: org.scalax.asuna.mapper.item.Application[K, H18, T18]
  ): org.scalax.asuna.mapper.item.Application[K, org.scalax.asuna.ii.item.ItemTagWithMessage18[
    H1,
    M1,
    H2,
    M2,
    H3,
    M3,
    H4,
    M4,
    H5,
    M5,
    H6,
    M6,
    H7,
    M7,
    H8,
    M8,
    H9,
    M9,
    H10,
    M10,
    H11,
    M11,
    H12,
    M12,
    H13,
    M13,
    H14,
    M14,
    H15,
    M15,
    H16,
    M16,
    H17,
    M17,
    H18,
    M18
  ], EatXyyType18[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18]] =
    new org.scalax.asuna.mapper.item.Application[K, org.scalax.asuna.ii.item.ItemTagWithMessage18[
      H1,
      M1,
      H2,
      M2,
      H3,
      M3,
      H4,
      M4,
      H5,
      M5,
      H6,
      M6,
      H7,
      M7,
      H8,
      M8,
      H9,
      M9,
      H10,
      M10,
      H11,
      M11,
      H12,
      M12,
      H13,
      M13,
      H14,
      M14,
      H15,
      M15,
      H16,
      M16,
      H17,
      M17,
      H18,
      M18
    ], EatXyyType18[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18]] {
      override def application(
        context: org.scalax.asuna.mapper.item.Context[K]
      ): K#M[EatXyyType18[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18]] = {
        AppendEatXyy.xyy18(t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18).application(context)
      }
    }
  implicit def xyyWithMessage19[
    K <: org.scalax.asuna.mapper.item.KindContext,
    H1,
    M1 <: org.scalax.asuna.mapper.item.Message,
    H2,
    M2 <: org.scalax.asuna.mapper.item.Message,
    H3,
    M3 <: org.scalax.asuna.mapper.item.Message,
    H4,
    M4 <: org.scalax.asuna.mapper.item.Message,
    H5,
    M5 <: org.scalax.asuna.mapper.item.Message,
    H6,
    M6 <: org.scalax.asuna.mapper.item.Message,
    H7,
    M7 <: org.scalax.asuna.mapper.item.Message,
    H8,
    M8 <: org.scalax.asuna.mapper.item.Message,
    H9,
    M9 <: org.scalax.asuna.mapper.item.Message,
    H10,
    M10 <: org.scalax.asuna.mapper.item.Message,
    H11,
    M11 <: org.scalax.asuna.mapper.item.Message,
    H12,
    M12 <: org.scalax.asuna.mapper.item.Message,
    H13,
    M13 <: org.scalax.asuna.mapper.item.Message,
    H14,
    M14 <: org.scalax.asuna.mapper.item.Message,
    H15,
    M15 <: org.scalax.asuna.mapper.item.Message,
    H16,
    M16 <: org.scalax.asuna.mapper.item.Message,
    H17,
    M17 <: org.scalax.asuna.mapper.item.Message,
    H18,
    M18 <: org.scalax.asuna.mapper.item.Message,
    H19,
    M19 <: org.scalax.asuna.mapper.item.Message,
    T1 <: org.scalax.asuna.mapper.item.TypeParam,
    T2 <: org.scalax.asuna.mapper.item.TypeParam,
    T3 <: org.scalax.asuna.mapper.item.TypeParam,
    T4 <: org.scalax.asuna.mapper.item.TypeParam,
    T5 <: org.scalax.asuna.mapper.item.TypeParam,
    T6 <: org.scalax.asuna.mapper.item.TypeParam,
    T7 <: org.scalax.asuna.mapper.item.TypeParam,
    T8 <: org.scalax.asuna.mapper.item.TypeParam,
    T9 <: org.scalax.asuna.mapper.item.TypeParam,
    T10 <: org.scalax.asuna.mapper.item.TypeParam,
    T11 <: org.scalax.asuna.mapper.item.TypeParam,
    T12 <: org.scalax.asuna.mapper.item.TypeParam,
    T13 <: org.scalax.asuna.mapper.item.TypeParam,
    T14 <: org.scalax.asuna.mapper.item.TypeParam,
    T15 <: org.scalax.asuna.mapper.item.TypeParam,
    T16 <: org.scalax.asuna.mapper.item.TypeParam,
    T17 <: org.scalax.asuna.mapper.item.TypeParam,
    T18 <: org.scalax.asuna.mapper.item.TypeParam,
    T19 <: org.scalax.asuna.mapper.item.TypeParam
  ](
    implicit t1: org.scalax.asuna.mapper.item.Application[K, H1, T1],
    t2: org.scalax.asuna.mapper.item.Application[K, H2, T2],
    t3: org.scalax.asuna.mapper.item.Application[K, H3, T3],
    t4: org.scalax.asuna.mapper.item.Application[K, H4, T4],
    t5: org.scalax.asuna.mapper.item.Application[K, H5, T5],
    t6: org.scalax.asuna.mapper.item.Application[K, H6, T6],
    t7: org.scalax.asuna.mapper.item.Application[K, H7, T7],
    t8: org.scalax.asuna.mapper.item.Application[K, H8, T8],
    t9: org.scalax.asuna.mapper.item.Application[K, H9, T9],
    t10: org.scalax.asuna.mapper.item.Application[K, H10, T10],
    t11: org.scalax.asuna.mapper.item.Application[K, H11, T11],
    t12: org.scalax.asuna.mapper.item.Application[K, H12, T12],
    t13: org.scalax.asuna.mapper.item.Application[K, H13, T13],
    t14: org.scalax.asuna.mapper.item.Application[K, H14, T14],
    t15: org.scalax.asuna.mapper.item.Application[K, H15, T15],
    t16: org.scalax.asuna.mapper.item.Application[K, H16, T16],
    t17: org.scalax.asuna.mapper.item.Application[K, H17, T17],
    t18: org.scalax.asuna.mapper.item.Application[K, H18, T18],
    t19: org.scalax.asuna.mapper.item.Application[K, H19, T19]
  ): org.scalax.asuna.mapper.item.Application[K, org.scalax.asuna.ii.item.ItemTagWithMessage19[
    H1,
    M1,
    H2,
    M2,
    H3,
    M3,
    H4,
    M4,
    H5,
    M5,
    H6,
    M6,
    H7,
    M7,
    H8,
    M8,
    H9,
    M9,
    H10,
    M10,
    H11,
    M11,
    H12,
    M12,
    H13,
    M13,
    H14,
    M14,
    H15,
    M15,
    H16,
    M16,
    H17,
    M17,
    H18,
    M18,
    H19,
    M19
  ], EatXyyType19[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19]] =
    new org.scalax.asuna.mapper.item.Application[K, org.scalax.asuna.ii.item.ItemTagWithMessage19[
      H1,
      M1,
      H2,
      M2,
      H3,
      M3,
      H4,
      M4,
      H5,
      M5,
      H6,
      M6,
      H7,
      M7,
      H8,
      M8,
      H9,
      M9,
      H10,
      M10,
      H11,
      M11,
      H12,
      M12,
      H13,
      M13,
      H14,
      M14,
      H15,
      M15,
      H16,
      M16,
      H17,
      M17,
      H18,
      M18,
      H19,
      M19
    ], EatXyyType19[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19]] {
      override def application(
        context: org.scalax.asuna.mapper.item.Context[K]
      ): K#M[EatXyyType19[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19]] = {
        AppendEatXyy.xyy19(t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19).application(context)
      }
    }
  implicit def xyyWithMessage20[
    K <: org.scalax.asuna.mapper.item.KindContext,
    H1,
    M1 <: org.scalax.asuna.mapper.item.Message,
    H2,
    M2 <: org.scalax.asuna.mapper.item.Message,
    H3,
    M3 <: org.scalax.asuna.mapper.item.Message,
    H4,
    M4 <: org.scalax.asuna.mapper.item.Message,
    H5,
    M5 <: org.scalax.asuna.mapper.item.Message,
    H6,
    M6 <: org.scalax.asuna.mapper.item.Message,
    H7,
    M7 <: org.scalax.asuna.mapper.item.Message,
    H8,
    M8 <: org.scalax.asuna.mapper.item.Message,
    H9,
    M9 <: org.scalax.asuna.mapper.item.Message,
    H10,
    M10 <: org.scalax.asuna.mapper.item.Message,
    H11,
    M11 <: org.scalax.asuna.mapper.item.Message,
    H12,
    M12 <: org.scalax.asuna.mapper.item.Message,
    H13,
    M13 <: org.scalax.asuna.mapper.item.Message,
    H14,
    M14 <: org.scalax.asuna.mapper.item.Message,
    H15,
    M15 <: org.scalax.asuna.mapper.item.Message,
    H16,
    M16 <: org.scalax.asuna.mapper.item.Message,
    H17,
    M17 <: org.scalax.asuna.mapper.item.Message,
    H18,
    M18 <: org.scalax.asuna.mapper.item.Message,
    H19,
    M19 <: org.scalax.asuna.mapper.item.Message,
    H20,
    M20 <: org.scalax.asuna.mapper.item.Message,
    T1 <: org.scalax.asuna.mapper.item.TypeParam,
    T2 <: org.scalax.asuna.mapper.item.TypeParam,
    T3 <: org.scalax.asuna.mapper.item.TypeParam,
    T4 <: org.scalax.asuna.mapper.item.TypeParam,
    T5 <: org.scalax.asuna.mapper.item.TypeParam,
    T6 <: org.scalax.asuna.mapper.item.TypeParam,
    T7 <: org.scalax.asuna.mapper.item.TypeParam,
    T8 <: org.scalax.asuna.mapper.item.TypeParam,
    T9 <: org.scalax.asuna.mapper.item.TypeParam,
    T10 <: org.scalax.asuna.mapper.item.TypeParam,
    T11 <: org.scalax.asuna.mapper.item.TypeParam,
    T12 <: org.scalax.asuna.mapper.item.TypeParam,
    T13 <: org.scalax.asuna.mapper.item.TypeParam,
    T14 <: org.scalax.asuna.mapper.item.TypeParam,
    T15 <: org.scalax.asuna.mapper.item.TypeParam,
    T16 <: org.scalax.asuna.mapper.item.TypeParam,
    T17 <: org.scalax.asuna.mapper.item.TypeParam,
    T18 <: org.scalax.asuna.mapper.item.TypeParam,
    T19 <: org.scalax.asuna.mapper.item.TypeParam,
    T20 <: org.scalax.asuna.mapper.item.TypeParam
  ](
    implicit t1: org.scalax.asuna.mapper.item.Application[K, H1, T1],
    t2: org.scalax.asuna.mapper.item.Application[K, H2, T2],
    t3: org.scalax.asuna.mapper.item.Application[K, H3, T3],
    t4: org.scalax.asuna.mapper.item.Application[K, H4, T4],
    t5: org.scalax.asuna.mapper.item.Application[K, H5, T5],
    t6: org.scalax.asuna.mapper.item.Application[K, H6, T6],
    t7: org.scalax.asuna.mapper.item.Application[K, H7, T7],
    t8: org.scalax.asuna.mapper.item.Application[K, H8, T8],
    t9: org.scalax.asuna.mapper.item.Application[K, H9, T9],
    t10: org.scalax.asuna.mapper.item.Application[K, H10, T10],
    t11: org.scalax.asuna.mapper.item.Application[K, H11, T11],
    t12: org.scalax.asuna.mapper.item.Application[K, H12, T12],
    t13: org.scalax.asuna.mapper.item.Application[K, H13, T13],
    t14: org.scalax.asuna.mapper.item.Application[K, H14, T14],
    t15: org.scalax.asuna.mapper.item.Application[K, H15, T15],
    t16: org.scalax.asuna.mapper.item.Application[K, H16, T16],
    t17: org.scalax.asuna.mapper.item.Application[K, H17, T17],
    t18: org.scalax.asuna.mapper.item.Application[K, H18, T18],
    t19: org.scalax.asuna.mapper.item.Application[K, H19, T19],
    t20: org.scalax.asuna.mapper.item.Application[K, H20, T20]
  ): org.scalax.asuna.mapper.item.Application[K, org.scalax.asuna.ii.item.ItemTagWithMessage20[
    H1,
    M1,
    H2,
    M2,
    H3,
    M3,
    H4,
    M4,
    H5,
    M5,
    H6,
    M6,
    H7,
    M7,
    H8,
    M8,
    H9,
    M9,
    H10,
    M10,
    H11,
    M11,
    H12,
    M12,
    H13,
    M13,
    H14,
    M14,
    H15,
    M15,
    H16,
    M16,
    H17,
    M17,
    H18,
    M18,
    H19,
    M19,
    H20,
    M20
  ], EatXyyType20[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20]] =
    new org.scalax.asuna.mapper.item.Application[K, org.scalax.asuna.ii.item.ItemTagWithMessage20[
      H1,
      M1,
      H2,
      M2,
      H3,
      M3,
      H4,
      M4,
      H5,
      M5,
      H6,
      M6,
      H7,
      M7,
      H8,
      M8,
      H9,
      M9,
      H10,
      M10,
      H11,
      M11,
      H12,
      M12,
      H13,
      M13,
      H14,
      M14,
      H15,
      M15,
      H16,
      M16,
      H17,
      M17,
      H18,
      M18,
      H19,
      M19,
      H20,
      M20
    ], EatXyyType20[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20]] {
      override def application(
        context: org.scalax.asuna.mapper.item.Context[K]
      ): K#M[EatXyyType20[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20]] = {
        AppendEatXyy.xyy20(t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20).application(context)
      }
    }
  implicit def xyyWithMessage21[
    K <: org.scalax.asuna.mapper.item.KindContext,
    H1,
    M1 <: org.scalax.asuna.mapper.item.Message,
    H2,
    M2 <: org.scalax.asuna.mapper.item.Message,
    H3,
    M3 <: org.scalax.asuna.mapper.item.Message,
    H4,
    M4 <: org.scalax.asuna.mapper.item.Message,
    H5,
    M5 <: org.scalax.asuna.mapper.item.Message,
    H6,
    M6 <: org.scalax.asuna.mapper.item.Message,
    H7,
    M7 <: org.scalax.asuna.mapper.item.Message,
    H8,
    M8 <: org.scalax.asuna.mapper.item.Message,
    H9,
    M9 <: org.scalax.asuna.mapper.item.Message,
    H10,
    M10 <: org.scalax.asuna.mapper.item.Message,
    H11,
    M11 <: org.scalax.asuna.mapper.item.Message,
    H12,
    M12 <: org.scalax.asuna.mapper.item.Message,
    H13,
    M13 <: org.scalax.asuna.mapper.item.Message,
    H14,
    M14 <: org.scalax.asuna.mapper.item.Message,
    H15,
    M15 <: org.scalax.asuna.mapper.item.Message,
    H16,
    M16 <: org.scalax.asuna.mapper.item.Message,
    H17,
    M17 <: org.scalax.asuna.mapper.item.Message,
    H18,
    M18 <: org.scalax.asuna.mapper.item.Message,
    H19,
    M19 <: org.scalax.asuna.mapper.item.Message,
    H20,
    M20 <: org.scalax.asuna.mapper.item.Message,
    H21,
    M21 <: org.scalax.asuna.mapper.item.Message,
    T1 <: org.scalax.asuna.mapper.item.TypeParam,
    T2 <: org.scalax.asuna.mapper.item.TypeParam,
    T3 <: org.scalax.asuna.mapper.item.TypeParam,
    T4 <: org.scalax.asuna.mapper.item.TypeParam,
    T5 <: org.scalax.asuna.mapper.item.TypeParam,
    T6 <: org.scalax.asuna.mapper.item.TypeParam,
    T7 <: org.scalax.asuna.mapper.item.TypeParam,
    T8 <: org.scalax.asuna.mapper.item.TypeParam,
    T9 <: org.scalax.asuna.mapper.item.TypeParam,
    T10 <: org.scalax.asuna.mapper.item.TypeParam,
    T11 <: org.scalax.asuna.mapper.item.TypeParam,
    T12 <: org.scalax.asuna.mapper.item.TypeParam,
    T13 <: org.scalax.asuna.mapper.item.TypeParam,
    T14 <: org.scalax.asuna.mapper.item.TypeParam,
    T15 <: org.scalax.asuna.mapper.item.TypeParam,
    T16 <: org.scalax.asuna.mapper.item.TypeParam,
    T17 <: org.scalax.asuna.mapper.item.TypeParam,
    T18 <: org.scalax.asuna.mapper.item.TypeParam,
    T19 <: org.scalax.asuna.mapper.item.TypeParam,
    T20 <: org.scalax.asuna.mapper.item.TypeParam,
    T21 <: org.scalax.asuna.mapper.item.TypeParam
  ](
    implicit t1: org.scalax.asuna.mapper.item.Application[K, H1, T1],
    t2: org.scalax.asuna.mapper.item.Application[K, H2, T2],
    t3: org.scalax.asuna.mapper.item.Application[K, H3, T3],
    t4: org.scalax.asuna.mapper.item.Application[K, H4, T4],
    t5: org.scalax.asuna.mapper.item.Application[K, H5, T5],
    t6: org.scalax.asuna.mapper.item.Application[K, H6, T6],
    t7: org.scalax.asuna.mapper.item.Application[K, H7, T7],
    t8: org.scalax.asuna.mapper.item.Application[K, H8, T8],
    t9: org.scalax.asuna.mapper.item.Application[K, H9, T9],
    t10: org.scalax.asuna.mapper.item.Application[K, H10, T10],
    t11: org.scalax.asuna.mapper.item.Application[K, H11, T11],
    t12: org.scalax.asuna.mapper.item.Application[K, H12, T12],
    t13: org.scalax.asuna.mapper.item.Application[K, H13, T13],
    t14: org.scalax.asuna.mapper.item.Application[K, H14, T14],
    t15: org.scalax.asuna.mapper.item.Application[K, H15, T15],
    t16: org.scalax.asuna.mapper.item.Application[K, H16, T16],
    t17: org.scalax.asuna.mapper.item.Application[K, H17, T17],
    t18: org.scalax.asuna.mapper.item.Application[K, H18, T18],
    t19: org.scalax.asuna.mapper.item.Application[K, H19, T19],
    t20: org.scalax.asuna.mapper.item.Application[K, H20, T20],
    t21: org.scalax.asuna.mapper.item.Application[K, H21, T21]
  ): org.scalax.asuna.mapper.item.Application[K, org.scalax.asuna.ii.item.ItemTagWithMessage21[
    H1,
    M1,
    H2,
    M2,
    H3,
    M3,
    H4,
    M4,
    H5,
    M5,
    H6,
    M6,
    H7,
    M7,
    H8,
    M8,
    H9,
    M9,
    H10,
    M10,
    H11,
    M11,
    H12,
    M12,
    H13,
    M13,
    H14,
    M14,
    H15,
    M15,
    H16,
    M16,
    H17,
    M17,
    H18,
    M18,
    H19,
    M19,
    H20,
    M20,
    H21,
    M21
  ], EatXyyType21[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21]] =
    new org.scalax.asuna.mapper.item.Application[K, org.scalax.asuna.ii.item.ItemTagWithMessage21[
      H1,
      M1,
      H2,
      M2,
      H3,
      M3,
      H4,
      M4,
      H5,
      M5,
      H6,
      M6,
      H7,
      M7,
      H8,
      M8,
      H9,
      M9,
      H10,
      M10,
      H11,
      M11,
      H12,
      M12,
      H13,
      M13,
      H14,
      M14,
      H15,
      M15,
      H16,
      M16,
      H17,
      M17,
      H18,
      M18,
      H19,
      M19,
      H20,
      M20,
      H21,
      M21
    ], EatXyyType21[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21]] {
      override def application(
        context: org.scalax.asuna.mapper.item.Context[K]
      ): K#M[EatXyyType21[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21]] = {
        AppendEatXyy.xyy21(t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21).application(context)
      }
    }
  implicit def xyyWithMessage22[
    K <: org.scalax.asuna.mapper.item.KindContext,
    H1,
    M1 <: org.scalax.asuna.mapper.item.Message,
    H2,
    M2 <: org.scalax.asuna.mapper.item.Message,
    H3,
    M3 <: org.scalax.asuna.mapper.item.Message,
    H4,
    M4 <: org.scalax.asuna.mapper.item.Message,
    H5,
    M5 <: org.scalax.asuna.mapper.item.Message,
    H6,
    M6 <: org.scalax.asuna.mapper.item.Message,
    H7,
    M7 <: org.scalax.asuna.mapper.item.Message,
    H8,
    M8 <: org.scalax.asuna.mapper.item.Message,
    H9,
    M9 <: org.scalax.asuna.mapper.item.Message,
    H10,
    M10 <: org.scalax.asuna.mapper.item.Message,
    H11,
    M11 <: org.scalax.asuna.mapper.item.Message,
    H12,
    M12 <: org.scalax.asuna.mapper.item.Message,
    H13,
    M13 <: org.scalax.asuna.mapper.item.Message,
    H14,
    M14 <: org.scalax.asuna.mapper.item.Message,
    H15,
    M15 <: org.scalax.asuna.mapper.item.Message,
    H16,
    M16 <: org.scalax.asuna.mapper.item.Message,
    H17,
    M17 <: org.scalax.asuna.mapper.item.Message,
    H18,
    M18 <: org.scalax.asuna.mapper.item.Message,
    H19,
    M19 <: org.scalax.asuna.mapper.item.Message,
    H20,
    M20 <: org.scalax.asuna.mapper.item.Message,
    H21,
    M21 <: org.scalax.asuna.mapper.item.Message,
    H22,
    M22 <: org.scalax.asuna.mapper.item.Message,
    T1 <: org.scalax.asuna.mapper.item.TypeParam,
    T2 <: org.scalax.asuna.mapper.item.TypeParam,
    T3 <: org.scalax.asuna.mapper.item.TypeParam,
    T4 <: org.scalax.asuna.mapper.item.TypeParam,
    T5 <: org.scalax.asuna.mapper.item.TypeParam,
    T6 <: org.scalax.asuna.mapper.item.TypeParam,
    T7 <: org.scalax.asuna.mapper.item.TypeParam,
    T8 <: org.scalax.asuna.mapper.item.TypeParam,
    T9 <: org.scalax.asuna.mapper.item.TypeParam,
    T10 <: org.scalax.asuna.mapper.item.TypeParam,
    T11 <: org.scalax.asuna.mapper.item.TypeParam,
    T12 <: org.scalax.asuna.mapper.item.TypeParam,
    T13 <: org.scalax.asuna.mapper.item.TypeParam,
    T14 <: org.scalax.asuna.mapper.item.TypeParam,
    T15 <: org.scalax.asuna.mapper.item.TypeParam,
    T16 <: org.scalax.asuna.mapper.item.TypeParam,
    T17 <: org.scalax.asuna.mapper.item.TypeParam,
    T18 <: org.scalax.asuna.mapper.item.TypeParam,
    T19 <: org.scalax.asuna.mapper.item.TypeParam,
    T20 <: org.scalax.asuna.mapper.item.TypeParam,
    T21 <: org.scalax.asuna.mapper.item.TypeParam,
    T22 <: org.scalax.asuna.mapper.item.TypeParam
  ](
    implicit t1: org.scalax.asuna.mapper.item.Application[K, H1, T1],
    t2: org.scalax.asuna.mapper.item.Application[K, H2, T2],
    t3: org.scalax.asuna.mapper.item.Application[K, H3, T3],
    t4: org.scalax.asuna.mapper.item.Application[K, H4, T4],
    t5: org.scalax.asuna.mapper.item.Application[K, H5, T5],
    t6: org.scalax.asuna.mapper.item.Application[K, H6, T6],
    t7: org.scalax.asuna.mapper.item.Application[K, H7, T7],
    t8: org.scalax.asuna.mapper.item.Application[K, H8, T8],
    t9: org.scalax.asuna.mapper.item.Application[K, H9, T9],
    t10: org.scalax.asuna.mapper.item.Application[K, H10, T10],
    t11: org.scalax.asuna.mapper.item.Application[K, H11, T11],
    t12: org.scalax.asuna.mapper.item.Application[K, H12, T12],
    t13: org.scalax.asuna.mapper.item.Application[K, H13, T13],
    t14: org.scalax.asuna.mapper.item.Application[K, H14, T14],
    t15: org.scalax.asuna.mapper.item.Application[K, H15, T15],
    t16: org.scalax.asuna.mapper.item.Application[K, H16, T16],
    t17: org.scalax.asuna.mapper.item.Application[K, H17, T17],
    t18: org.scalax.asuna.mapper.item.Application[K, H18, T18],
    t19: org.scalax.asuna.mapper.item.Application[K, H19, T19],
    t20: org.scalax.asuna.mapper.item.Application[K, H20, T20],
    t21: org.scalax.asuna.mapper.item.Application[K, H21, T21],
    t22: org.scalax.asuna.mapper.item.Application[K, H22, T22]
  ): org.scalax.asuna.mapper.item.Application[K, org.scalax.asuna.ii.item.ItemTagWithMessage22[
    H1,
    M1,
    H2,
    M2,
    H3,
    M3,
    H4,
    M4,
    H5,
    M5,
    H6,
    M6,
    H7,
    M7,
    H8,
    M8,
    H9,
    M9,
    H10,
    M10,
    H11,
    M11,
    H12,
    M12,
    H13,
    M13,
    H14,
    M14,
    H15,
    M15,
    H16,
    M16,
    H17,
    M17,
    H18,
    M18,
    H19,
    M19,
    H20,
    M20,
    H21,
    M21,
    H22,
    M22
  ], EatXyyType22[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22]] =
    new org.scalax.asuna.mapper.item.Application[K, org.scalax.asuna.ii.item.ItemTagWithMessage22[
      H1,
      M1,
      H2,
      M2,
      H3,
      M3,
      H4,
      M4,
      H5,
      M5,
      H6,
      M6,
      H7,
      M7,
      H8,
      M8,
      H9,
      M9,
      H10,
      M10,
      H11,
      M11,
      H12,
      M12,
      H13,
      M13,
      H14,
      M14,
      H15,
      M15,
      H16,
      M16,
      H17,
      M17,
      H18,
      M18,
      H19,
      M19,
      H20,
      M20,
      H21,
      M21,
      H22,
      M22
    ], EatXyyType22[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22]] {
      override def application(
        context: org.scalax.asuna.mapper.item.Context[K]
      ): K#M[EatXyyType22[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22]] = {
        AppendEatXyy.xyy22(t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22).application(context)
      }
    }
}
object AppendEatXyyWithMessage extends AppendEatXyyWithMessage
