package net.scalax.asuna.mapper.common

abstract sealed trait MacroColumnInfo {
  def tableColumnName: String
}

trait SingleColumnInfo extends MacroColumnInfo {
  override def tableColumnName: String
  def singleModelName: String
}

trait MutiplyColumnInfo extends MacroColumnInfo {
  override def tableColumnName: String
  def mutiplyModelName: List[String]
}

package impl {
  class SingleColumnInfoImpl(override val tableColumnName: String, override val singleModelName: String)         extends SingleColumnInfo
  class MutiplyColumnInfoImpl(override val tableColumnName: String, override val mutiplyModelName: List[String]) extends MutiplyColumnInfo

  /*def apply(tableColumnSymbol: Symbol, symbol1: Symbol): SingleColumnInfo = {
    new SingleColumnInfoImpl(tableColumnSymbol = tableColumnSymbol, singleModelSymbol = symbol1)
  }

  def apply(tableColumnSymbol: Symbol, symbol1: Symbol, symbol2: Symbol, symbols: Symbol*): MutiplyColumnInfo = {
    new MutiplyColumnInfoImpl(tableColumnSymbol = tableColumnSymbol, mutiplyModelSymbol = symbol1 :: symbol2 :: symbols.toList)
  }*/
}
