@(maxItem: Int)

package org.scalax.asuna.ii.item

object ArticleXyyPlus {

def miaomiaomiao1[T0 <: EatXyyType0, T1 <: org.scalax.asuna.mapper.item.TypeParam]: org.scalax.asuna.mapper.item.Plus[T0, T1, EatXyyType1[T1]] = new org.scalax.asuna.mapper.item.Plus[T0, T1, EatXyyType1[T1]] {
    override def plus(p: T0#H, item: T1#H): XyyItem1[T1#H] = ArticleXyy0.eat(item)
    override def sub: org.scalax.asuna.mapper.item.Plus[T0#T, T1#T, EatXyyType1[T1#T]] = miaomiaomiao1[T0#T, T1#T]
}

def hlistPlus1[T1 <: org.scalax.asuna.mapper.item.TypeParam] = miaomiaomiao1[EatXyyType0, T1]
def hlistPut1[T1 <: org.scalax.asuna.mapper.item.TypeParam] = hlistPlus1[T1]

@for(i <- 2 to maxItem) {
    def plus@{i}[@for(ii <- 1 to i) { T@{ii} <: org.scalax.asuna.mapper.item.TypeParam @if(ii < i) { , } }]
    : org.scalax.asuna.mapper.item.Plus[EatXyyType@{i - 1}[@for(ii <- 1 to (i - 1)) { T@{ii} @if(ii < (i - 1)) { , } }], T@{i}, EatXyyType@{i}[@for(ii <- 1 to i) { T@{ii} @if(ii < i) { , } }]] =
    new org.scalax.asuna.mapper.item.Plus[EatXyyType@{i - 1}[@for(ii <- 1 to (i - 1)) { T@{ii} @if(ii < (i - 1)) { , } }], T@{i}, EatXyyType@{i}[@for(ii <- 1 to i) { T@{ii} @if(ii < i) { , } }]] {
        override def plus(p: XyyItem@{i - 1}[@for(ii <- 1 to (i - 1)) { T@{ii}#H @if(ii < (i - 1)) { , } }], item: T@{i}#H): XyyItem@{i}[@for(ii <- 1 to i) { T@{ii}#H @if(ii < i) { , } }] = p.eat(item)
        override def sub: org.scalax.asuna.mapper.item.Plus[EatXyyType@{i - 1}[@for(ii <- 1 to (i - 1)) { T@{ii} @if(ii < (i - 1)) { , } }]#T, T@{i}#T, EatXyyType@{i}[@for(ii <- 1 to i) { T@{ii} @if(ii < i) { , } }]#T] = plus@{i}[@for(ii <- 1 to i) { T@{ii}#T @if(ii < i) { , } }]
    }

    def put@{i}[@for(ii <- 1 to i) { T@{ii} <: org.scalax.asuna.mapper.item.TypeParam @if(ii < i) { , } }]
    : org.scalax.asuna.mapper.item.Plus[EatXyyType@{i - 1}[@for(ii <- 1 to (i - 1)) { T@{ii} @if(ii < (i - 1)) { , } }], T@{i}, EatXyyType@{i}[T@{i} @for(ii <- 1 to (i - 1)) { , T@{ii} }]] =
    new org.scalax.asuna.mapper.item.Plus[EatXyyType@{i - 1}[@for(ii <- 1 to (i - 1)) { T@{ii} @if(ii < (i - 1)) { , } }], T@{i}, EatXyyType@{i}[T@{i} @for(ii <- 1 to (i - 1)) { , T@{ii} }]] {
        override def plus(p: XyyItem@{i - 1}[@for(ii <- 1 to (i - 1)) { T@{ii}#H @if(ii < (i - 1)) { , } }], item: T@{i}#H): XyyItem@{i}[T@{i}#H @for(ii <- 1 to (i - 1)) { , T@{ii}#H }] = p.pudao(item)
        override def sub: org.scalax.asuna.mapper.item.Plus[EatXyyType@{i - 1}[@for(ii <- 1 to (i - 1)) { T@{ii} @if(ii < (i - 1)) { , } }]#T, T@{i}#T, EatXyyType@{i}[T@{i} @for(ii <- 1 to (i - 1)) { , T@{ii} }]#T] = put@{i}[@for(ii <- 1 to i) { T@{ii}#T @if(ii < i) { , } }]
    }
}

}