@(maxItem: Int)

package org.scalax.asuna.ii.item

trait Item2XyyReverse0 extends Any with XyyItem0 {
    override def pudao[T](xyy: T): Item2XyyReverse1[T] = new Item2XyyReverse1(org.scalax.asuna.mapper.item.EatValue0.addRightItem(xyy))
}

object Item2XyyReverse0 extends Item2XyyReverse0

class Item2XyyReverse1[T1](val item: org.scalax.asuna.mapper.item.EatValue0#AddRightItem[T1]) extends AnyVal with XyyItem1[T1] {
  override def pudao[T](xyy: T): Item2XyyReverse2[T, T1] = new Item2XyyReverse2[T, T1](item.addRightItem(xyy))
  override def leftHead: T1                      = item.dropRightItem
  override def leftTail: Item2XyyReverse0             = Item2XyyReverse0
  override def i1: T1                             = item.item.i1
}

@for(i <- 2 to maxItem) {

    class Item2XyyReverse@{i}[@for(ii <- 1 to i) { T@{ii} @if(ii < i) { , } }](val item: org.scalax.asuna.mapper.item.EatValue0 @for(ii <- i to 1 by (- 1)) { #AddRightItem[T@{ii}] }) extends AnyVal with XyyItem@{i}[@for(ii <- 1 to i) { T@{ii} @if(ii < i) { , } }] {

        override def pudao[T](xyy: T): Item2XyyReverse@{i + 1}[T @for(ii <- 1 to i) { , T@{ii} }] = new Item2XyyReverse@{i + 1}[T @for(ii <- 1 to i) { , T@{ii} }](item.addRightItem(xyy))

        override def leftHead: T1 = item.dropRightItem
        override def leftTail: Item2XyyReverse@{i - 1}[@for(ii <- 2 to i) { T@{ii} @if(ii < i) { , } }] = new Item2XyyReverse@{i - 1}(item.dropRight)

        @org.scalax.asuna.codegen.Property.toItem2II(i)

    }

}

class Item2XyyReverse@{maxItem + 1}[@for(ii <- 1 to (maxItem + 1)) { T@{ii} @if(ii < (maxItem + 1)) { , } }](val item: org.scalax.asuna.mapper.item.EatValue0 @for(ii <- (maxItem + 1) to 1 by (- 1)) { #AddRightItem[T@{ii}] }) extends AnyVal with XyyItem@{maxItem + 1}[@for(ii <- 1 to (maxItem + 1)) { T@{ii} @if(ii < (maxItem + 1)) { , } }] {

    override def leftHead: T1 = item.dropRightItem
    override def leftTail: Item2XyyReverse@{maxItem}[@for(ii <- 2 to (maxItem + 1)) { T@{ii} @if(ii < (maxItem + 1)) { , } }] = new Item2XyyReverse@{maxItem}(item.dropRight)

    @org.scalax.asuna.codegen.Property.toItem2II(maxItem + 1)

}