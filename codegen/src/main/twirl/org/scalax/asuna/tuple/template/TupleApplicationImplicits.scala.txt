@(maxItem: Int)

package asuna

trait TupleApplicationImplicits {

@for(i <- 2 to maxItem + 1) {

    implicit def tupleApplicationImplicits@{i}[K <: KindContext @for(ii <- 1 to i) { , H@{ii} } @for(ii <- 1 to i) { , T@{ii} <: TypeHList }]
    (implicit @for(ii <- 1 to i) { t@{ii}: Application[K, H@{ii}, T@{ii}] @if(ii < i) { , } })
    : Application[K, (@for(ii <- 1 to i) { H@{ii} @if(ii < i) { , } }), TupleTypeHList@{i}[@for(ii <- 1 to i) { T@{ii} @if(ii < i) { , } }]] =
    new Application[K, (@for(ii <- 1 to i) { H@{ii} @if(ii < i) { , } }), TupleTypeHList@{i}[@for(ii <- 1 to i) { T@{ii} @if(ii < i) { , } }]] {
        override def application(context: Context[K]): K#M[TupleTypeHList@{i}[@for(ii <- 1 to i) { T@{ii} @if(ii < i) { , } }]] = {
            if (context.isReverse) {
                context.append(ItemTag@{i - 1}.itemTagApplicationImplicit@{i - 1}(@for(ii <- 2 to i) { t@{ii} @if(ii < i) { , } }).application(context), t1.application(context), TupleTypeHListPlus1.hlistPut@{i})
            } else {
                context.append(ItemTag@{i - 1}.itemTagApplicationImplicit@{i - 1}(@for(ii <- 2 to i) { t@{ii - 1} @if(ii < i) { , } }).application(context), t@{i}.application(context), TupleTypeHListPlus1.hlistPlus@{i})
            }
        }
    }

}

@for(i <- 10 to 17) {

    implicit def tupleApplicationImplicits@{i}[K <: KindContext @for(ii <- 1 to i) { , H@{ii} } @for(ii <- 1 to i) { , T@{ii} <: TypeHList }]
    (implicit @for(ii <- 1 to i) { t@{ii}: Application[K, H@{ii}, T@{ii}] @if(ii < i) { , } })
    : Application[K, (@for(ii <- 1 to i) { H@{ii} @if(ii < i) { , } }), TupleTypeHList@{i}[@for(ii <- 1 to i) { T@{ii} @if(ii < i) { , } }]] =
    new Application[K, (@for(ii <- 1 to i) { H@{ii} @if(ii < i) { , } }), TupleTypeHList@{i}[@for(ii <- 1 to i) { T@{ii} @if(ii < i) { , } }]] {
        override def application(context: Context[K]): K#M[TupleTypeHList@{i}[@for(ii <- 1 to i) { T@{ii} @if(ii < i) { , } }]] = {
            if (context.isReverse) {
                val i1 = ItemTag@{i - 9}.itemTagApplicationImplicit@{i - 9}(@for(ii <- 10 to i) { t@{ii} @if(ii < i) { , } }).application(context)
                val i2 = ItemTag8.itemTagApplicationImplicit8(@for(ii <- 2 to 9) { t@{ii} @if(ii < 9) { , } }).application(context)
                val i3 = context.append[
                    ItemTypeHList@{i - 9}[@for(ii <- 10 to i) { T@{ii} @if(ii < i) { , } }],
                    ItemTypeHList8[@for(ii <- 2 to 9) { T@{ii} @if(ii < 9) { , } }],
                    ItemTypeHList2[
                        ItemTypeHList8[@for(ii <- 2 to 9) { T@{ii} @if(ii < 9) { , } }],
                        ItemTypeHList@{i - 9}[@for(ii <- 10 to i) { T@{ii} @if(ii < i) { , } }]
                ]](i1, i2, Only2Plus.hlistPut2)
                context.append(i3, t1.application(context), TupleTypeHListPlus2.hlistPut@{i})
            } else {
                val i1 = ItemTag8.itemTagApplicationImplicit8(@for(ii <- 1 to 8) { t@{ii} @if(ii < 8) { , } }).application(context)
                val i2 = ItemTag@{i - 9}.itemTagApplicationImplicit@{i - 9}(@for(ii <- 9 to i - 1) { t@{ii} @if(ii < i - 1) { , } }).application(context)
                val i3 = context.append[
                    ItemTypeHList8[@for(ii <- 1 to 8) { T@{ii} @if(ii < 8) { , } }],
                    ItemTypeHList@{i - 9}[@for(ii <- 9 to i - 1) { T@{ii} @if(ii < i - 1) { , } }],
                    ItemTypeHList2[
                        ItemTypeHList8[@for(ii <- 1 to 8) { T@{ii} @if(ii < 8) { , } }],
                        ItemTypeHList@{i - 9}[@for(ii <- 9 to i - 1) { T@{ii} @if(ii < i - 1) { , } }]
                ]](i1, i2, Only2Plus.hlistPlus2)
                context.append(i3, t@{i}.application(context), TupleTypeHListPlus2.hlistPlus@{i})
            }
        }
    }

}

@for(i <- 18 to 22) {

    implicit def tupleApplicationImplicits@{i}[K <: KindContext @for(ii <- 1 to i) { , H@{ii} } @for(ii <- 1 to i) { , T@{ii} <: TypeHList }]
    (implicit @for(ii <- 1 to i) { t@{ii}: Application[K, H@{ii}, T@{ii}] @if(ii < i) { , } })
    : Application[K, (@for(ii <- 1 to i) { H@{ii} @if(ii < i) { , } }), TupleTypeHList@{i}[@for(ii <- 1 to i) { T@{ii} @if(ii < i) { , } }]] =
    new Application[K, (@for(ii <- 1 to i) { H@{ii} @if(ii < i) { , } }), TupleTypeHList@{i}[@for(ii <- 1 to i) { T@{ii} @if(ii < i) { , } }]] {
        override def application(context: Context[K]): K#M[TupleTypeHList@{i}[@for(ii <- 1 to i) { T@{ii} @if(ii < i) { , } }]] = {
            if (context.isReverse) {
                val i1 = ItemTag@{i - 17}.itemTagApplicationImplicit@{i - 17}(@for(ii <- 18 to i) { t@{ii} @if(ii < i) { , } }).application(context)
                val i2 = ItemTag8.itemTagApplicationImplicit8(@for(ii <- 2 to 9) { t@{ii + 8} @if(ii < 9) { , } }).application(context)
                val i3 = ItemTag8.itemTagApplicationImplicit8(@for(ii <- 2 to 9) { t@{ii} @if(ii < 9) { , } }).application(context)
                val i4 = context.append[
                    ItemTypeHList@{i - 17}[@for(ii <- 18 to i) { T@{ii} @if(ii < i) { , } }],
                    ItemTypeHList8[@for(ii <- 2 to 9) { T@{ii + 8} @if(ii < 9) { , } }],
                    ItemTypeHList2[
                        ItemTypeHList8[@for(ii <- 2 to 9) { T@{ii + 8} @if(ii < 9) { , } }],
                        ItemTypeHList@{i - 17}[@for(ii <- 18 to i) { T@{ii} @if(ii < i) { , } }]
                    ]](i1, i2, Only2Plus.hlistPut2)
                val i5 = context.append[
                    ItemTypeHList2[
                        ItemTypeHList8[@for(ii <- 2 to 9) { T@{ii + 8} @if(ii < 9) { , } }],
                        ItemTypeHList@{i - 17}[@for(ii <- 18 to i) { T@{ii} @if(ii < i) { , } }]
                    ],
                    ItemTypeHList8[@for(ii <- 2 to 9) { T@{ii} @if(ii < 9) { , } }],

                    ItemTypeHList3[
                        ItemTypeHList8[@for(ii <- 2 to 9) { T@{ii} @if(ii < 9) { , } }],
                        ItemTypeHList8[@for(ii <- 2 to 9) { T@{ii + 8} @if(ii < 9) { , } }],
                        ItemTypeHList@{i - 17}[@for(ii <- 18 to i) { T@{ii} @if(ii < i) { , } }]
                ]](i4, i3, ItemTypeHListPlus3.put3)
                context.append(i5, t1.application(context), TupleTypeHListPlus3.hlistPut@{i})
            } else {
                val i1 = ItemTag8.itemTagApplicationImplicit8(@for(ii <- 1 to 8) { t@{ii} @if(ii < 8) { , } }).application(context)
                val i2 = ItemTag8.itemTagApplicationImplicit8(@for(ii <- 9 to 16) { t@{ii} @if(ii < 16) { , } }).application(context)
                val i3 = ItemTag@{i - 17}.itemTagApplicationImplicit@{i - 17}(@for(ii <- 17 to i - 1) { t@{ii} @if(ii < i - 1) { , } }).application(context)
                val i4 = context.append[
                    ItemTypeHList8[@for(ii <- 1 to 8) { T@{ii} @if(ii < 8) { , } }],
                    ItemTypeHList8[@for(ii <- 9 to 16) { T@{ii} @if(ii < 16) { , } }],
                    ItemTypeHList2[
                        ItemTypeHList8[@for(ii <- 1 to 8) { T@{ii} @if(ii < 8) { , } }],
                        ItemTypeHList8[@for(ii <- 9 to 16) { T@{ii} @if(ii < 16) { , } }]
                ]](i1, i2, Only2Plus.hlistPlus2)
                val i5 = context.append[
                    ItemTypeHList2[
                        ItemTypeHList8[@for(ii <- 1 to 8) { T@{ii} @if(ii < 8) { , } }],
                        ItemTypeHList8[@for(ii <- 9 to 16) { T@{ii} @if(ii < 16) { , } }]
                    ],
                    ItemTypeHList@{i - 17}[@for(ii <- 17 to i - 1) { T@{ii} @if(ii < i - 1) { , } }],

                    ItemTypeHList3[
                    ItemTypeHList8[@for(ii <- 1 to 8) { T@{ii} @if(ii < 8) { , } }],
                    ItemTypeHList8[@for(ii <- 9 to 16) { T@{ii} @if(ii < 16) { , } }],
                    ItemTypeHList@{i - 17}[@for(ii <- 17 to i - 1) { T@{ii} @if(ii < i - 1) { , } }],
                ]](i4, i3, ItemTypeHListPlus3.plus3)
                context.append(i5, t@{i}.application(context), TupleTypeHListPlus3.hlistPlus@{i})
            }
        }
    }

}

}

object TupleApplicationImplicits extends TupleApplicationImplicits