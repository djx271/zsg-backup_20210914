@(maxItem: Int)

package org.scalax.asuna.mapper.item

import scala.language.higherKinds

trait Article0 extends Any {
    type Eat[T] <: Article1[T]
    def eat[T](xyy: T): Eat[T]
}

@for(i <- 1 to maxItem) {
    trait Article@{i} [@for(ii <- 1 to i) { E@{ii} @if(ii < i) { , } }] extends Any {
        self =>

        type Eat[T] <: Article@{i + 1} [T, @for(ii <- 1 to i) { E@{ii} @if(ii < i) { , } }]


        @for(ii <- 1 to i) {
            def e@{ii}: E@{ii}
        }

        def eat[T](xyy: T): Eat[T]

    }
}

trait Article@{maxItem + 1} [@for(i <- 1 to (maxItem + 1)) { E@{i} @if(i < (maxItem + 1)) { , } }] extends Any {
    self =>

    @for(i <- 1 to (maxItem + 1)) {
        def e@{i}: E@{i}
    }

}