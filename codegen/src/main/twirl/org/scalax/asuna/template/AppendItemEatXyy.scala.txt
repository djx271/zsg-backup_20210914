@(maxItem: Int)

trait Xyy[I] extends Any {
  protected def item: I
}

trait ArticleXyy0 extends Any with Article0 {
    override def eat[T](xyy: T): ArticleXyy1[T]
}

@for(i <- 1 to maxItem) {

    trait ArticleXyy@{i}[@for(ii <- 1 to i) { E@{ii} @if(ii < i) { , } }] extends Any with Xyy[EatValue0@for(ii <- i to 1 by (- 1)) { #AddRightItem[E@{ii}] }]
    with Article@{i}[@for(ii <- 1 to i) { E@{ii} @if(ii < i) { , } }] {
        override protected def item: EatValue0@for(ii <- i to 1 by (- 1)) { #AddRightItem[E@{ii}] }
        @org.scalax.asuna.codegen.TemplateTree1.eatXyy(i)
        override def eat[T](xyy: T): ArticleXyy@{i + 1}[T, @for(ii <- 1 to i) { E@{ii} @if(ii < i) { , } }]
    }

}

trait ArticleXyy@{maxItem + 1}[@for(ii <- 1 to (maxItem + 1)) { E@{ii} @if(ii < (maxItem + 1)) { , } }] extends Any with Xyy[EatValue0@for(ii <- (maxItem + 1) to 1 by (- 1)) { #AddRightItem[E@{ii}] }]
with Article@{maxItem + 1}[@for(ii <- 1 to (maxItem + 1)) { E@{ii} @if(ii < (maxItem + 1)) { , } }] {
    override protected def item: EatValue0@for(ii <- (maxItem + 1) to 1 by (- 1)) { #AddRightItem[E@{ii}] }
    @org.scalax.asuna.codegen.TemplateTree1.eatXyy((maxItem + 1))
}