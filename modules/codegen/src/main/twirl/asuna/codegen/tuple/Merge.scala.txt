@(contextNum: Int, maxPropertyNum: Int)(isDotty: Boolean)

package asuna

class Merge@{contextNum}[@asuna.codegen.SnippetUtil.XI_Snippet(1 to contextNum).mkString(" , "), Target]

object Merge@{contextNum} {

    @for(ii <- 1 to maxPropertyNum) {
        @if(isDotty) { inline given } else { implicit def } nodetag@{ii}_merge@{contextNum}_implicit[
            @asuna.codegen.MergeUtil.XI_CI_NodeTag(1 to contextNum)(1 to ii).mkString("", " , ", ",")
            @asuna.codegen.MergeUtil.TargetI_NodeTag(1 to ii).mkString(" , ")
        ](@if(isDotty) { given } else { implicit }
            @asuna.codegen.MergeUtil.MergeI_NodeTag_Implicit_Parameter(1 to contextNum)(1 to ii).mkString(" , ")
        ): Merge@{contextNum}[@asuna.codegen.MergeUtil.MergeI_NodeTag_Type(1 to contextNum)(1 to ii).mkString(" , ")] =
            new Merge@{contextNum}[@asuna.codegen.MergeUtil.MergeI_NodeTag_Type(1 to contextNum)(1 to ii).mkString(" , ")]

        @*@if(isDotty) { inline given } else { implicit def } tupletag@{ii}_merge@{contextNum}_implicit[X1_C1 @for(i <- 2 to contextNum) { , X1_C@{i} } @for(ii <- 2 to ii) { @for(iii <- 1 to contextNum) { , X@{ii}_C@{iii} } }
            @for(iii <- 1 to ii) { , X@{iii} }
        ]: Merge@{contextNum}[
            TupleTag@{ii}[PropertyTag1[X1_C1, X1] @for(iii <- 2 to ii) { , PropertyTag1[X@{iii}_C1, X@{iii}] }]
            @for(iiii <- 2 to contextNum) {
                , TupleTag@{ii}[PropertyTag1[X1_C@{iiii}, X1] @for(iii <- 2 to ii) { , PropertyTag1[X@{iii}_C@{iiii}, X@{iii}] }]
            }
            , TupleTag@{ii}[
                PropertyTag@{contextNum}[@for(iiiii <- 1 to contextNum) { X1_C@{iiiii} , } X1]
                @for(iiii <- 2 to ii) { , PropertyTag@{contextNum}[@for(iiiii <- 1 to contextNum) { X@{iiii}_C@{iiiii} , } X@{iiii}] }
            ]
        ] = {
            new Merge@{contextNum}[
                TupleTag@{ii}[PropertyTag1[X1_C1, X1] @for(iii <- 2 to ii) { , PropertyTag1[X@{iii}_C1, X@{iii}] }]
                @for(iiii <- 2 to contextNum) {
                    , TupleTag@{ii}[PropertyTag1[X1_C@{iiii}, X1] @for(iii <- 2 to ii) { , PropertyTag1[X@{iii}_C@{iiii}, X@{iii}] }]
                }
                , TupleTag@{ii}[
                    PropertyTag@{contextNum}[@for(iiiii <- 1 to contextNum) { X1_C@{iiiii} , } X1]
                    @for(iiii <- 2 to ii) { , PropertyTag@{contextNum}[@for(iiiii <- 1 to contextNum) { X@{iiii}_C@{iiiii} , } X@{iiii}] }
                ]
            ]
        }*@

        @if(isDotty) { inline given } else { implicit def } tupletag@{ii}_merge@{contextNum}_implicit[
            @asuna.codegen.MergeUtil.XI_CI_TupleTag(1 to contextNum)(1 to ii).mkString("", " , ", ",")
            @asuna.codegen.MergeUtil.TargetI_TupleTag(1 to ii).mkString(" , ")
        ](@if(isDotty) { given } else { implicit }
            @asuna.codegen.MergeUtil.MergeI_TupleTag_Implicit_Parameter(1 to contextNum)(1 to ii).mkString(" , ")
        ): Merge@{contextNum}[@asuna.codegen.MergeUtil.MergeI_TupleTag_Type(1 to contextNum)(1 to ii).mkString(" , ")] =
            new Merge@{contextNum}[@asuna.codegen.MergeUtil.MergeI_TupleTag_Type(1 to contextNum)(1 to ii).mkString(" , ")]
    }

}