@(maxItem: Int)

package asuna

object BuildTag {

    final inline def lift[T](tag: => AppendTag[T]): AppendTag[T] = AppendTag[T]

    @for(i <- 1 to maxItem) {
        final inline def tag[T1 @for(ii <- 2 to i) { , T@{ii} }](t1 : AppendTag[T1] @for(ii <- 2 to i) { , t@{ii} : AppendTag[T@{ii}] }):
        AppendTag[TupleTag@{i}[T1 @for(ii <- 2 to i) { , T@{ii} }]] =
            AppendTag[TupleTag@{i}[T1 @for(ii <- 2 to i) { , T@{ii} }]]

        final inline def nodeTag[T1 <: TupleTag @for(ii <- 2 to i) { , T@{ii} <: TupleTag }](t1: AppendTag[T1] @for(ii <- 2 to i) { , t@{ii} : AppendTag[T@{ii}] }):
        AppendTag[NodeTag@{i}[T1 @for(ii <- 2 to i) { , T@{ii} }]] =
            AppendTag[NodeTag@{i}[T1 @for(ii <- 2 to i) { , T@{ii} }]]
    }

    @for(i <- 2 to maxItem) {
        final inline def mergeTag[T1 <: TupleTag @for(ii <- 2 to i) { , T@{ii} <: TupleTag }, Target <: TupleTag](t1: AppendTag[T1] @for(ii <- 2 to i) { , t@{ii} : AppendTag[T@{ii}] })
            (given i: Merge@{i}[T1 @for(ii <- 2 to i) { , T@{ii} }, Target]): AppendTag[Target] = AppendTag[Target]
    }

}